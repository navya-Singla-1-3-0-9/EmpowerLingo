{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\pages\\\\keyboard.js\";\nimport React from \"react\";\nimport Card from \"../components/card\";\nimport '../components/css/keyboard.css';\nimport Key from \"../components/key\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from \"../components/navbar\";\nimport Particles from \"react-tsparticles\";\nimport { Main } from \"tsparticles-engine\";\nimport { loadBubblesPreset } from \"tsparticles-preset-bubbles\";\nimport { loadLinksPreset } from \"tsparticles-preset-links\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Keys extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayLetter = event => {\n      console.log(event.target);\n      this.setState({\n        inputVal: this.state.inputVal + event.target.alt\n      });\n      console.log(this.state.inputVal);\n    };\n\n    this.space = () => {\n      this.setState({\n        inputVal: this.state.inputVal + \" \"\n      });\n    };\n\n    this.state = {\n      inputVal: \"\"\n    };\n  }\n\n  customInit(main) {\n    // this adds the preset to tsParticles, you can safely use the\n    loadLinksPreset(tsParticles);\n  }\n\n  render() {\n    const options = {\n      backgroundMask: {\n        enable: true,\n        cover: {\n          value: {\n            r: 0,\n            g: 0,\n            b: 0\n          }\n        }\n      },\n      background: {\n        image: \"url('https://particles.js.org/images/background.jpg')\",\n        size: \"100% 100%\",\n        repeat: \"no-repeat\"\n      },\n      fullScreen: {\n        enable: true,\n        zIndex: -1\n      },\n      particles: {\n        color: {\n          value: [\"#1E00FF\", \"#FF0061\", \"#E1FF00\", \"#00FF9E\"],\n          animation: {\n            enable: true,\n            speed: 30\n          }\n        },\n        move: {\n          direction: \"bottom\",\n          enable: true,\n          outModes: {\n            default: \"out\"\n          },\n          size: true,\n          speed: {\n            min: 1,\n            max: 3\n          }\n        },\n        number: {\n          value: 200,\n          density: {\n            enable: true,\n            area: 800\n          }\n        },\n        opacity: {\n          value: 1,\n          animation: {\n            enable: false,\n            startValue: \"max\",\n            destroy: \"min\",\n            speed: 0.3,\n            sync: true\n          }\n        },\n        rotate: {\n          value: {\n            min: 0,\n            max: 360\n          },\n          direction: \"random\",\n          move: true,\n          animation: {\n            enable: true,\n            speed: 60\n          }\n        },\n        tilt: {\n          direction: \"random\",\n          enable: true,\n          move: true,\n          value: {\n            min: 0,\n            max: 360\n          },\n          animation: {\n            enable: true,\n            speed: 60\n          }\n        },\n        shape: {\n          type: [\"circle\", \"square\", \"polygon\"],\n          options: {\n            polygon: [{\n              sides: 5\n            }, {\n              sides: 6\n            }]\n          }\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 3\n          }\n        },\n        roll: {\n          darken: {\n            enable: true,\n            value: 30\n          },\n          enlighten: {\n            enable: true,\n            value: 30\n          },\n          enable: true,\n          speed: {\n            min: 15,\n            max: 25\n          }\n        },\n        wobble: {\n          distance: 30,\n          enable: true,\n          move: true,\n          speed: {\n            min: -15,\n            max: 15\n          }\n        }\n      }\n    };\n    const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    let i = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Particles, {\n        options: options,\n        init: this.customInit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: this.state.inputVal,\n          style: {\n            marginBottom: \"10%\"\n          },\n          placeholder: \"Type here by using ASL keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keys\",\n          children: letters.map((letter, index) => {\n            return /*#__PURE__*/_jsxDEV(Key, {\n              letter: letter,\n              displayLetter: this.displayLetter\n            }, letter, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 30\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning\",\n            onClick: this.space,\n            children: \"Space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Keys;","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/pages/keyboard.js"],"names":["React","Card","Key","NavBar","Particles","Main","loadBubblesPreset","loadLinksPreset","Keys","Component","constructor","props","displayLetter","event","console","log","target","setState","inputVal","state","alt","space","customInit","main","tsParticles","render","options","backgroundMask","enable","cover","value","r","g","b","background","image","size","repeat","fullScreen","zIndex","particles","color","animation","speed","move","direction","outModes","default","min","max","number","density","area","opacity","startValue","destroy","sync","rotate","tilt","shape","type","polygon","sides","roll","darken","enlighten","wobble","distance","letters","i","marginBottom","map","letter","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"../components/card\";\r\nimport '../components/css/keyboard.css'\r\nimport Key from \"../components/key\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBar from \"../components/navbar\";\r\n\r\nimport Particles from \"react-tsparticles\";\r\nimport { Main } from \"tsparticles-engine\";\r\nimport { loadBubblesPreset } from \"tsparticles-preset-bubbles\";\r\nimport { loadLinksPreset } from \"tsparticles-preset-links\";\r\n\r\nclass Keys extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            inputVal:\"\"\r\n        }\r\n    }\r\n    displayLetter=(event)=>{\r\n        console.log(event.target)\r\n        this.setState({inputVal:this.state.inputVal+event.target.alt})\r\n        console.log(this.state.inputVal)\r\n    }\r\n    space=()=>{\r\n        this.setState({inputVal:this.state.inputVal+\" \"})\r\n    }\r\n    customInit(main: Main) {\r\n        // this adds the preset to tsParticles, you can safely use the\r\n        loadLinksPreset(tsParticles);\r\n\r\n      }\r\n    render(){\r\n        const options = {\r\n            backgroundMask: {\r\n                enable: true,\r\n                cover: {\r\n                  value: {\r\n                    r: 0,\r\n                    g: 0,\r\n                    b: 0\r\n                  }\r\n                }\r\n              },\r\n              background: {\r\n                image: \"url('https://particles.js.org/images/background.jpg')\",\r\n                size: \"100% 100%\",\r\n                repeat: \"no-repeat\"\r\n              },\r\n              fullScreen: {\r\n                enable: true,\r\n                zIndex: -1\r\n              },\r\n              particles: {\r\n                color: {\r\n                  value: [\"#1E00FF\", \"#FF0061\", \"#E1FF00\", \"#00FF9E\"],\r\n                  animation: {\r\n                    enable: true,\r\n                    speed: 30\r\n                  }\r\n                },\r\n                move: {\r\n                  direction: \"bottom\",\r\n                  enable: true,\r\n                  outModes: {\r\n                    default: \"out\"\r\n                  },\r\n                  size: true,\r\n                  speed: {\r\n                    min: 1,\r\n                    max: 3\r\n                  }\r\n                },\r\n                number: {\r\n                  value: 200,\r\n                  density: {\r\n                    enable: true,\r\n                    area: 800\r\n                  }\r\n                },\r\n                opacity: {\r\n                  value: 1,\r\n                  animation: {\r\n                    enable: false,\r\n                    startValue: \"max\",\r\n                    destroy: \"min\",\r\n                    speed: 0.3,\r\n                    sync: true\r\n                  }\r\n                },\r\n                rotate: {\r\n                  value: {\r\n                    min: 0,\r\n                    max: 360\r\n                  },\r\n                  direction: \"random\",\r\n                  move: true,\r\n                  animation: {\r\n                    enable: true,\r\n                    speed: 60\r\n                  }\r\n                },\r\n                tilt: {\r\n                  direction: \"random\",\r\n                  enable: true,\r\n                  move: true,\r\n                  value: {\r\n                    min: 0,\r\n                    max: 360\r\n                  },\r\n                  animation: {\r\n                    enable: true,\r\n                    speed: 60\r\n                  }\r\n                },\r\n                shape: {\r\n                  type: [\"circle\", \"square\", \"polygon\"],\r\n                  options: {\r\n                    polygon: [\r\n                      {\r\n                        sides: 5\r\n                      },\r\n                      {\r\n                        sides: 6\r\n                      }\r\n                    ]\r\n                  }\r\n                },\r\n                size: {\r\n                  value: {\r\n                    min: 1,\r\n                    max: 3\r\n                  }\r\n                },\r\n                roll: {\r\n                  darken: {\r\n                    enable: true,\r\n                    value: 30\r\n                  },\r\n                  enlighten: {\r\n                    enable: true,\r\n                    value: 30\r\n                  },\r\n                  enable: true,\r\n                  speed: {\r\n                    min: 15,\r\n                    max: 25\r\n                  }\r\n                },\r\n                wobble: {\r\n                  distance: 30,\r\n                  enable: true,\r\n                  move: true,\r\n                  speed: {\r\n                    min: -15,\r\n                    max: 15\r\n                  }\r\n                }\r\n              }\r\n          };\r\n\r\n    const letters= ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\r\n    let i=0;\r\n    return (\r\n        <div>\r\n              <NavBar/>\r\n              <Particles options={options} init={this.customInit} />\r\n        <div className=\"container\">\r\n          \r\n            <textarea value={this.state.inputVal} style={{ marginBottom:\"10%\"}} placeholder=\"Type here by using ASL keys\"></textarea>\r\n        <div className=\"keys\">\r\n\r\n            {   \r\n                letters.map((letter,index)=>{\r\n                   return  ( <Key key={letter} letter={letter} displayLetter={this.displayLetter}/>)\r\n                })\r\n            }\r\n        </div>\r\n        <br></br>\r\n        <div>\r\n        <button className= \"btn btn-warning\" onClick={this.space}>Space</button>\r\n        </div>\r\n        \r\n        </div>\r\n        </div>\r\n    );\r\n        }\r\n }\r\n export default Keys"]},"metadata":{},"sourceType":"module"}