{"ast":null,"code":"function randomSquareCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nexport class SquareShape {\n  randomPosition(position, offset, fill) {\n    if (fill) {\n      return {\n        x: randomSquareCoordinate(position.x, offset.x),\n        y: randomSquareCoordinate(position.y, offset.y)\n      };\n    } else {\n      const halfW = offset.x / 2,\n            halfH = offset.y / 2,\n            side = Math.floor(Math.random() * 4),\n            v = (Math.random() - 0.5) * 2;\n\n      switch (side) {\n        case 0:\n          return {\n            x: position.x + v * halfW,\n            y: position.y - halfH\n          };\n\n        case 1:\n          return {\n            x: position.x - halfW,\n            y: position.y + v * halfH\n          };\n\n        case 2:\n          return {\n            x: position.x + v * halfW,\n            y: position.y + halfH\n          };\n\n        case 3:\n        default:\n          return {\n            x: position.x + halfW,\n            y: position.y + v * halfH\n          };\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/node_modules/tsparticles-plugin-emitters/Shapes/Square/SquareShape.js"],"names":["randomSquareCoordinate","position","offset","Math","random","SquareShape","randomPosition","fill","x","y","halfW","halfH","side","floor","v"],"mappings":"AAAA,SAASA,sBAAT,CAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AAC9C,SAAOD,QAAQ,GAAGC,MAAM,IAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,CAAxB;AACH;;AACD,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,cAAc,CAACL,QAAD,EAAWC,MAAX,EAAmBK,IAAnB,EAAyB;AACnC,QAAIA,IAAJ,EAAU;AACN,aAAO;AACHC,QAAAA,CAAC,EAAER,sBAAsB,CAACC,QAAQ,CAACO,CAAV,EAAaN,MAAM,CAACM,CAApB,CADtB;AAEHC,QAAAA,CAAC,EAAET,sBAAsB,CAACC,QAAQ,CAACQ,CAAV,EAAaP,MAAM,CAACO,CAApB;AAFtB,OAAP;AAIH,KALD,MAMK;AACD,YAAMC,KAAK,GAAGR,MAAM,CAACM,CAAP,GAAW,CAAzB;AAAA,YAA4BG,KAAK,GAAGT,MAAM,CAACO,CAAP,GAAW,CAA/C;AAAA,YAAkDG,IAAI,GAAGT,IAAI,CAACU,KAAL,CAAWV,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAAzD;AAAA,YAAwFU,CAAC,GAAG,CAACX,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,CAApH;;AACA,cAAQQ,IAAR;AACI,aAAK,CAAL;AACI,iBAAO;AACHJ,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaM,CAAC,GAAGJ,KADjB;AAEHD,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaE;AAFb,WAAP;;AAIJ,aAAK,CAAL;AACI,iBAAO;AACHH,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaE,KADb;AAEHD,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaK,CAAC,GAAGH;AAFjB,WAAP;;AAIJ,aAAK,CAAL;AACI,iBAAO;AACHH,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaM,CAAC,GAAGJ,KADjB;AAEHD,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaE;AAFb,WAAP;;AAIJ,aAAK,CAAL;AACA;AACI,iBAAO;AACHH,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaE,KADb;AAEHD,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaK,CAAC,GAAGH;AAFjB,WAAP;AAlBR;AAuBH;AACJ;;AAlCoB","sourcesContent":["function randomSquareCoordinate(position, offset) {\r\n    return position + offset * (Math.random() - 0.5);\r\n}\r\nexport class SquareShape {\r\n    randomPosition(position, offset, fill) {\r\n        if (fill) {\r\n            return {\r\n                x: randomSquareCoordinate(position.x, offset.x),\r\n                y: randomSquareCoordinate(position.y, offset.y),\r\n            };\r\n        }\r\n        else {\r\n            const halfW = offset.x / 2, halfH = offset.y / 2, side = Math.floor(Math.random() * 4), v = (Math.random() - 0.5) * 2;\r\n            switch (side) {\r\n                case 0:\r\n                    return {\r\n                        x: position.x + v * halfW,\r\n                        y: position.y - halfH,\r\n                    };\r\n                case 1:\r\n                    return {\r\n                        x: position.x - halfW,\r\n                        y: position.y + v * halfH,\r\n                    };\r\n                case 2:\r\n                    return {\r\n                        x: position.x + v * halfW,\r\n                        y: position.y + halfH,\r\n                    };\r\n                case 3:\r\n                default:\r\n                    return {\r\n                        x: position.x + halfW,\r\n                        y: position.y + v * halfH,\r\n                    };\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}