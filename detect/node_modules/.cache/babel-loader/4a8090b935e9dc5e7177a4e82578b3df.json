{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\ASL\\\\detect\\\\src\\\\components\\\\progressBar.js\";\nimport React from \"react\";\nimport './css/progress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CircularProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const sqSize = this.props.sqSize;\n    const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - dashArray * this.props.percentage / 100;\n    const dashOffset2 = dashArray - dashArray * (this.props.percentage - 10) / 100;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: this.props.sqSize,\n      height: this.props.sqSize,\n      viewBox: viewBox,\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"circle-background\",\n        cx: this.props.sqSize / 2,\n        cy: this.props.sqSize / 2,\n        r: radius,\n        strokeWidth: `${this.props.strokeWidth}px`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"circle-progress\",\n        cx: this.props.sqSize / 2,\n        cy: this.props.sqSize / 2,\n        r: radius,\n        strokeWidth: `${this.props.strokeWidth}px` // Start progress marker at 12 O'Clock\n        ,\n        transform: `rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`,\n        style: {\n          strokeDasharray: dashArray,\n          strokeDashoffset: dashOffset\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"circle-progress top\",\n        cx: this.props.sqSize / 2,\n        cy: this.props.sqSize / 2,\n        r: radius,\n        strokeWidth: `${this.props.strokeWidth}px` // Start progress marker at 12 O'Clock\n        ,\n        transform: `rotate(-126 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`,\n        style: {\n          strokeDasharray: dashArray,\n          strokeDashoffset: dashOffset2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }, this), \"*/\", /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"circle-text\",\n        x: \"50%\",\n        y: \"50%\",\n        dy: \".3em\",\n        textAnchor: \"middle\",\n        children: `${this.props.percentage}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nCircularProgressBar.defaultProps = {\n  sqSize: 180,\n  percentage: 55,\n  strokeWidth: 12\n};\nexport default CircularProgressBar;","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/ASL/detect/src/components/progressBar.js"],"names":["React","CircularProgressBar","Component","constructor","props","state","render","sqSize","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","percentage","dashOffset2","strokeDasharray","strokeDashoffset","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './css/progress.css';\r\nclass CircularProgressBar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n  \r\n    render() {\r\n      const sqSize = this.props.sqSize;\r\n      const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\r\n      const viewBox = `0 0 ${sqSize} ${sqSize}`;\r\n      const dashArray = radius * Math.PI * 2;\r\n      const dashOffset = dashArray - dashArray * this.props.percentage / 100;\r\n      const dashOffset2 = dashArray - dashArray * (this.props.percentage-10) / 100;\r\n      return (\r\n        <svg\r\n            width={this.props.sqSize}\r\n            height={this.props.sqSize}\r\n            viewBox={viewBox}>\r\n            <circle\r\n              className=\"circle-background\"\r\n              cx={this.props.sqSize / 2}\r\n              cy={this.props.sqSize / 2}\r\n              r={radius}\r\n              strokeWidth={`${this.props.strokeWidth}px`} />\r\n            <circle\r\n              className=\"circle-progress\"\r\n              cx={this.props.sqSize / 2}\r\n              cy={this.props.sqSize / 2}\r\n              r={radius}\r\n              strokeWidth={`${this.props.strokeWidth}px`}\r\n              // Start progress marker at 12 O'Clock\r\n              transform={`rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`}\r\n              style={{\r\n                strokeDasharray: dashArray,\r\n                strokeDashoffset: dashOffset\r\n              }} />\r\n\r\n           <circle\r\n              className=\"circle-progress top\"\r\n              cx={this.props.sqSize / 2}\r\n              cy={this.props.sqSize / 2}\r\n              r={radius}\r\n              strokeWidth={`${this.props.strokeWidth}px`}\r\n              // Start progress marker at 12 O'Clock\r\n              transform={`rotate(-126 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`}\r\n              style={{\r\n                strokeDasharray: dashArray,\r\n                strokeDashoffset: dashOffset2\r\n              }} />*/\r\n            <text\r\n              className=\"circle-text\"\r\n              x=\"50%\"\r\n              y=\"50%\"\r\n              dy=\".3em\"\r\n              textAnchor=\"middle\">\r\n              {`${this.props.percentage}%`}\r\n            </text>\r\n        </svg>\r\n      );\r\n    }\r\n  }\r\n  \r\n  CircularProgressBar.defaultProps = {\r\n    sqSize: 180,\r\n    percentage: 55,\r\n    strokeWidth: 12\r\n  };\r\n  \r\n  \r\n  export default CircularProgressBar;"]},"metadata":{},"sourceType":"module"}