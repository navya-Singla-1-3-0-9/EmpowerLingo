{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiri\\\\OneDrive\\\\Desktop\\\\Shirin Julka\\\\hackathons\\\\ASL\\\\detect\\\\src\\\\components\\\\circularProgress.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { render } from \"react-dom\"; // Import react-circular-progressbar module and styles\n\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport ProgressProvider from \"./progressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [valueEnd, setValueEnd] = React.useState(props.value);\n  console.log(props, props.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px 30px 30px 30px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      label: \"Initial animation upon mount with ProgressProvider wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ProgressProvider, {\n        valueStart: 0,\n        valueEnd: valueEnd,\n        children: value => /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: value,\n          text: `${value}%`,\n          styles: {\n            // Customize the root svg element\n            root: {},\n            // Customize the path, i.e. the \"completed progress\"\n            path: {\n              // Path color\n              stroke: `rgba(62, 152, 199, ${value})`,\n              // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n              strokeLinecap: 'butt',\n              // Customize transition animation\n              transition: 'stroke-dashoffset 0.5s ease 0s'\n            },\n            // Customize the circle behind the path, i.e. the \"total progress\"\n            trail: {\n              // Trail color\n              stroke: '#d6d6d6'\n            },\n            // Customize the text\n            text: {\n              // Text color\n              fill: '#f88',\n              // Text size\n              fontSize: '10px'\n            },\n            // Customize background - only used when the `background` prop is true\n            background: {\n              fill: '#3e98c7'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"cZvlRNWs9G4FvkR3WgrntB02wKg=\");\n\n_c = App;\n\nfunction Example(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"3px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 250,\n        width: 350\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = Example;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["C:/Users/shiri/OneDrive/Desktop/Shirin Julka/hackathons/ASL/detect/src/components/circularProgress.js"],"names":["React","render","CircularProgressbar","ProgressProvider","App","props","valueEnd","setValueEnd","useState","value","console","log","padding","root","path","stroke","strokeLinecap","transition","trail","text","fill","fontSize","background","Example","marginTop","marginLeft","width","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAO,4CAAP;AAEA,OAAOC,gBAAP,MAA6B,eAA7B;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACQ,QAAN,CAAeH,KAAK,CAACI,KAArB,CAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAkBA,KAAK,CAACI,KAAxB;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,4DAAf;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,UAAU,EAAE,CAA9B;AAAiC,QAAA,QAAQ,EAAEN,QAA3C;AAAA,kBACGG,KAAK,iBAAI,QAAC,mBAAD;AAAqB,UAAA,KAAK,EAAEA,KAA5B;AAAmC,UAAA,IAAI,EAAG,GAAEA,KAAM,GAAlD;AAAyD,UAAA,MAAM,EAAE;AACjF;AACAI,YAAAA,IAAI,EAAE,EAF2E;AAGjF;AACAC,YAAAA,IAAI,EAAE;AACJ;AACAC,cAAAA,MAAM,EAAG,sBAAqBN,KAAM,GAFhC;AAGJ;AACAO,cAAAA,aAAa,EAAE,MAJX;AAKJ;AACAC,cAAAA,UAAU,EAAE;AANR,aAJ2E;AAYjF;AACAC,YAAAA,KAAK,EAAE;AACL;AACAH,cAAAA,MAAM,EAAE;AAFH,aAb0E;AAiBjF;AACAI,YAAAA,IAAI,EAAE;AACJ;AACAC,cAAAA,IAAI,EAAE,MAFF;AAGJ;AACAC,cAAAA,QAAQ,EAAE;AAJN,aAlB2E;AAwBjF;AACAC,YAAAA,UAAU,EAAE;AACVF,cAAAA,IAAI,EAAE;AADI;AAzBqE;AAAjE;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAzCD;;GAAMhB,G;;KAAAA,G;;AA2CN,SAASmB,OAAT,CAAiBlB,KAAjB,EAAwB;AACtB,sBAEI;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,SAAS,EAAC;AAAZ,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,KAAK,EAAE;AAAGC,QAAAA,UAAU,EAAC,GAAd;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA,gBAA8CrB,KAAK,CAACsB;AAApD;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,UAAU,EAAC;AAAb,OAAZ;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaD;;MAdQF,O;AAgBT,eAAenB,GAAf","sourcesContent":["import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n// Import react-circular-progressbar module and styles\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nimport ProgressProvider from \"./progressBar\";\r\n\r\nconst App = (props) => {\r\n  const [valueEnd, setValueEnd] = React.useState(props.value);\r\n  console.log(props,props.value);\r\n  return (\r\n    <div style={{ padding: \"30px 30px 30px 30px\" }}>\r\n      <Example label=\"Initial animation upon mount with ProgressProvider wrapper\">\r\n        <ProgressProvider valueStart={0} valueEnd={valueEnd}>\r\n          {value => <CircularProgressbar value={value} text={`${value}%`}    styles={{\r\n    // Customize the root svg element\r\n    root: {},\r\n    // Customize the path, i.e. the \"completed progress\"\r\n    path: {\r\n      // Path color\r\n      stroke: `rgba(62, 152, 199, ${value})`,\r\n      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n      strokeLinecap: 'butt',\r\n      // Customize transition animation\r\n      transition: 'stroke-dashoffset 0.5s ease 0s',\r\n    },\r\n    // Customize the circle behind the path, i.e. the \"total progress\"\r\n    trail: {\r\n      // Trail color\r\n      stroke: '#d6d6d6',\r\n    },\r\n    // Customize the text\r\n    text: {\r\n      // Text color\r\n      fill: '#f88',\r\n      // Text size\r\n      fontSize: '10px',\r\n    },\r\n    // Customize background - only used when the `background` prop is true\r\n    background: {\r\n      fill: '#3e98c7',\r\n    },\r\n  }} />}\r\n        </ProgressProvider>\r\n      </Example>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Example(props) {\r\n  return (\r\n  \r\n      <div style={{ marginTop:\"3px\"}}>\r\n        <h1>My Progress</h1>\r\n        <br/>\r\n        <div style={{  marginLeft:250 ,width: 350 }}>{props.children}</div>\r\n        \r\n        <div style={{ marginLeft:20 }}>\r\n          <br/>\r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}