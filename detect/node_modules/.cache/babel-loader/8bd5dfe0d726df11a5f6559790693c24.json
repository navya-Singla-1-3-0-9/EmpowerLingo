{"ast":null,"code":"import { AnimationStatus, colorToHsl, getHslAnimationFromHsl, randomInRange } from \"tsparticles-engine\";\n\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a;\n\n  const colorValue = value;\n\n  if (!colorValue || !valueAnimation.enable) {\n    return;\n  }\n\n  const offset = randomInRange(valueAnimation.offset);\n  const velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n\n  if (!decrease || colorValue.status === AnimationStatus.increasing) {\n    colorValue.value += velocity;\n\n    if (decrease && colorValue.value > max) {\n      colorValue.status = AnimationStatus.decreasing;\n      colorValue.value -= colorValue.value % max;\n    }\n  } else {\n    colorValue.value -= velocity;\n\n    if (colorValue.value < 0) {\n      colorValue.status = AnimationStatus.increasing;\n      colorValue.value += colorValue.value;\n    }\n  }\n\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\n\nfunction updateColor(particle, delta) {\n  var _a, _b, _c;\n\n  const animationOptions = particle.options.color.animation;\n\n  if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n    updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n  }\n\n  if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n    updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n  }\n\n  if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n    updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n  }\n}\n\nexport class ColorUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    const hslColor = colorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n\n    if (hslColor) {\n      particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n    }\n  }\n\n  isEnabled(particle) {\n    var _a, _b, _c;\n\n    const animationOptions = particle.options.color.animation;\n    return !particle.destroyed && !particle.spawning && (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable || ((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable || ((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable);\n  }\n\n  update(particle, delta) {\n    updateColor(particle, delta);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/node_modules/tsparticles-updater-color/ColorUpdater.js"],"names":["AnimationStatus","colorToHsl","getHslAnimationFromHsl","randomInRange","updateColorValue","delta","value","valueAnimation","max","decrease","_a","colorValue","enable","offset","velocity","factor","status","increasing","decreasing","updateColor","particle","_b","_c","animationOptions","options","color","animation","h","undefined","s","l","ColorUpdater","constructor","container","init","hslColor","id","reduceDuplicates","retina","reduceFactor","isEnabled","destroyed","spawning","update"],"mappings":"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","sourcesContent":["import { AnimationStatus, colorToHsl, getHslAnimationFromHsl, randomInRange } from \"tsparticles-engine\";\r\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\r\n    var _a;\r\n    const colorValue = value;\r\n    if (!colorValue || !valueAnimation.enable) {\r\n        return;\r\n    }\r\n    const offset = randomInRange(valueAnimation.offset);\r\n    const velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\r\n    if (!decrease || colorValue.status === AnimationStatus.increasing) {\r\n        colorValue.value += velocity;\r\n        if (decrease && colorValue.value > max) {\r\n            colorValue.status = AnimationStatus.decreasing;\r\n            colorValue.value -= colorValue.value % max;\r\n        }\r\n    }\r\n    else {\r\n        colorValue.value -= velocity;\r\n        if (colorValue.value < 0) {\r\n            colorValue.status = AnimationStatus.increasing;\r\n            colorValue.value += colorValue.value;\r\n        }\r\n    }\r\n    if (colorValue.value > max) {\r\n        colorValue.value %= max;\r\n    }\r\n}\r\nfunction updateColor(particle, delta) {\r\n    var _a, _b, _c;\r\n    const animationOptions = particle.options.color.animation;\r\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\r\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\r\n    }\r\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\r\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\r\n    }\r\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\r\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\r\n    }\r\n}\r\nexport class ColorUpdater {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    init(particle) {\r\n        const hslColor = colorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\r\n        if (hslColor) {\r\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\r\n        }\r\n    }\r\n    isEnabled(particle) {\r\n        var _a, _b, _c;\r\n        const animationOptions = particle.options.color.animation;\r\n        return (!particle.destroyed &&\r\n            !particle.spawning &&\r\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\r\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\r\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\r\n    }\r\n    update(particle, delta) {\r\n        updateColor(particle, delta);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}