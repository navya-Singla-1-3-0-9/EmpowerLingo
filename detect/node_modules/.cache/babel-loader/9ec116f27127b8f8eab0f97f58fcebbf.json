{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl\\\\detect\\\\src\\\\pages\\\\practice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"../utilities\";\nimport * as fp from \"fingerpose\";\nimport Handsigns from './handsigns';\nimport { Signimage, Signpass } from './handimage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [emoji, setEmoji] = useState(null);\n  const [current, setCurrent] = useState(null);\n  let letters = ['A', 'B', 'C'];\n  const images = {\n    A: Signimage.A,\n    B: Signimage.B,\n    C: Signimage.C,\n    D: Signimage.D,\n    E: Signimage.E,\n    F: Signimage.F,\n    G: Signimage.G,\n    H: Signimage.H,\n    I: Signimage.I,\n    J: Signimage.J,\n    K: Signimage.K,\n    L: Signimage.L,\n    M: Signimage.M,\n    N: Signimage.N,\n    O: Signimage.O,\n    P: Signimage.P,\n    Q: Signimage.Q,\n    R: Signimage.R,\n    S: Signimage.S,\n    T: Signimage.T,\n    U: Signimage.U,\n    V: Signimage.V,\n    W: Signimage.W,\n    X: Signimage.X,\n    Y: Signimage.Y,\n    Z: Signimage.Z\n  };\n  const signs = {\n    A: Signpass.A,\n    B: Signpass.B\n  };\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"signs:\", Signpass[0]);\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const random = () => {\n    const j = Math.floor(Math.random() * (Signpass.length + 1));\n    return j;\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const hand = await net.estimateHands(video); // console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([Handsigns.aSign, Handsigns.bSign, Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign, Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign, Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign, Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          const confidence = gesture.gestures.map(prediction => prediction.confidence);\n          const maxConfidence = confidence.indexOf(Math.max.apply(null, confidence)); //console.log(gesture.gestures[maxConfidence].name);\n          //console.log(Signpass[current].alt && Signpass[current]);\n\n          if (current) {\n            if (Signpass[current].alt === gesture.gestures[maxConfidence].name) {\n              swal( /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Hello world!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This is now rendered with JSX!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this));\n              setCurrent(random());\n            }\n          } else {\n            setCurrent(random());\n          }\n\n          setEmoji(gesture.gestures[maxConfidence].name); //   console.log(emoji);\n        }\n      }\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runHandpose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 600,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), emoji !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[emoji],\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          bottom: 500,\n          right: 0,\n          textAlign: \"center\",\n          height: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this) : \"\", emoji !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Signpass[current].src,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          width: 500,\n          left: 0,\n          textAlign: \"center\",\n          height: 480,\n          zIndex: 9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 30\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+itn9VukIhz5T38Wyac9vSjWSL8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl/detect/src/pages/practice.js"],"names":["React","useRef","useState","useEffect","swal","tf","handpose","Webcam","drawHand","fp","Handsigns","Signimage","Signpass","App","webcamRef","canvasRef","emoji","setEmoji","current","setCurrent","letters","images","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","signs","runHandpose","net","load","console","log","setInterval","detect","random","j","Math","floor","length","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","GE","GestureEstimator","aSign","bSign","cSign","dSign","eSign","fSign","gSign","hSign","iSign","jSign","kSign","lSign","mSign","nSign","oSign","pSign","qSign","rSign","sSign","tSign","uSign","vSign","wSign","xSign","ySign","zSign","gesture","estimate","landmarks","gestures","undefined","confidence","map","prediction","maxConfidence","indexOf","max","apply","alt","name","ctx","getContext","position","marginLeft","marginRight","right","textAlign","zindex","bottom","src","left","zIndex"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawHand } from \"../utilities\";\r\n\r\nimport * as fp from \"fingerpose\";\r\nimport Handsigns from './handsigns'\r\nimport {Signimage,Signpass} from './handimage'\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [emoji, setEmoji] = useState(null);\r\n  const [current,setCurrent]= useState(null);\r\n\r\n  let letters=['A','B','C']\r\n  const images = { A: Signimage.A, \r\n    B: Signimage.B, \r\n    C: Signimage.C,\r\n    D: Signimage.D,\r\n    E:Signimage.E,\r\n    F:Signimage.F,\r\n    G:Signimage.G,\r\n    H:Signimage.H,\r\n    I:Signimage.I,\r\n    J:Signimage.J,\r\n    K:Signimage.K,\r\n    L:Signimage.L,\r\n    M: Signimage.M, \r\n    N: Signimage.N,\r\n    O: Signimage.O,\r\n    P:Signimage.P,\r\n    Q:Signimage.Q,\r\n    R:Signimage.R,\r\n    S:Signimage.S,\r\n    T:Signimage.T,\r\n    U:Signimage.U,\r\n    V:Signimage.V,\r\n    W:Signimage.W,\r\n    X:Signimage.X,\r\n    Y:Signimage.Y,\r\n    Z:Signimage.Z,\r\n  };\r\n  const signs={\r\n    A: Signpass.A,\r\n    B: Signpass.B,\r\n  }\r\n \r\n  \r\n \r\n  const runHandpose = async () => {\r\n  \r\n    const net = await handpose.load();\r\n    \r\n    console.log(\"signs:\",Signpass[0]);\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n  const random=()=>{\r\n      const j = Math.floor(Math.random() * (Signpass.length + 1));\r\n      return j;\r\n}\r\n\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      // console.log(hand);\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n         \r\n          Handsigns.aSign,\r\n          Handsigns.bSign,Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign,\r\n          Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign,\r\n          Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign,\r\n          Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n        \r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n           //console.log(gesture.gestures[maxConfidence].name);\r\n         \r\n           \r\n           //console.log(Signpass[current].alt && Signpass[current]);\r\n           if(current){\r\n           if (Signpass[current].alt === gesture.gestures[maxConfidence].name) {\r\n            swal(\r\n              <div>\r\n                <h1>Hello world!</h1>\r\n                <p>\r\n                  This is now rendered with JSX!\r\n                </p>\r\n              </div>\r\n            )\r\n            setCurrent(random());\r\n           }\r\n            \r\n           \r\n          }else{\r\n            setCurrent(random());\r\n          }\r\n       \r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n       //   console.log(emoji);\r\n        }\r\n      }\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n     \r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n         \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 600,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n      \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n           \r\n          }}\r\n        />\r\n        {/* NEW STUFF */}\r\n        {emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n           \r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n          {emoji !== null ? (<img\r\n            src={Signpass[current].src}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              width:500,\r\n              \r\n            left: 0,\r\n              textAlign: \"center\",\r\n              height: 480,\r\n              zIndex:9\r\n            }}\r\n          />):(\r\n            \"\"\r\n          )\r\n}\r\n\r\n       \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}