{"ast":null,"code":"import { AnimationStatus, clamp, DestroyType } from \"tsparticles-engine\";\n\nfunction checkDestroy(particle, value, minValue, maxValue) {\n  switch (particle.options.size.animation.destroy) {\n    case DestroyType.max:\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n\n      break;\n\n    case DestroyType.min:\n      if (value <= minValue) {\n        particle.destroy();\n      }\n\n      break;\n  }\n}\n\nfunction updateSize(particle, delta) {\n  var _a, _b, _c, _d;\n\n  const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const minValue = particle.size.min;\n  const maxValue = particle.size.max;\n\n  if (!(!particle.destroyed && particle.size.enable && (((_b = particle.size.loops) !== null && _b !== void 0 ? _b : 0) <= 0 || ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0)))) {\n    return;\n  }\n\n  switch (particle.size.status) {\n    case AnimationStatus.increasing:\n      if (particle.size.value >= maxValue) {\n        particle.size.status = AnimationStatus.decreasing;\n\n        if (!particle.size.loops) {\n          particle.size.loops = 0;\n        }\n\n        particle.size.loops++;\n      } else {\n        particle.size.value += sizeVelocity;\n      }\n\n      break;\n\n    case AnimationStatus.decreasing:\n      if (particle.size.value <= minValue) {\n        particle.size.status = AnimationStatus.increasing;\n\n        if (!particle.size.loops) {\n          particle.size.loops = 0;\n        }\n\n        particle.size.loops++;\n      } else {\n        particle.size.value -= sizeVelocity;\n      }\n\n  }\n\n  checkDestroy(particle, particle.size.value, minValue, maxValue);\n\n  if (!particle.destroyed) {\n    particle.size.value = clamp(particle.size.value, minValue, maxValue);\n  }\n}\n\nexport class SizeUpdater {\n  init() {}\n\n  isEnabled(particle) {\n    var _a, _b, _c;\n\n    return !particle.destroyed && !particle.spawning && particle.size.enable && (((_a = particle.size.loops) !== null && _a !== void 0 ? _a : 0) <= 0 || ((_b = particle.size.loops) !== null && _b !== void 0 ? _b : 0) < ((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0));\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateSize(particle, delta);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/node_modules/tsparticles-updater-size/SizeUpdater.js"],"names":["AnimationStatus","clamp","DestroyType","checkDestroy","particle","value","minValue","maxValue","options","size","animation","destroy","max","min","updateSize","delta","_a","_b","_c","_d","sizeVelocity","velocity","factor","destroyed","enable","loops","maxLoops","status","increasing","decreasing","SizeUpdater","init","isEnabled","spawning","update"],"mappings":"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","sourcesContent":["import { AnimationStatus, clamp, DestroyType } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const minValue = particle.size.min;\n    const maxValue = particle.size.max;\n    if (!(!particle.destroyed &&\n        particle.size.enable &&\n        (((_b = particle.size.loops) !== null && _b !== void 0 ? _b : 0) <= 0 || ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0)))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case AnimationStatus.increasing:\n            if (particle.size.value >= maxValue) {\n                particle.size.status = AnimationStatus.decreasing;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (particle.size.value <= minValue) {\n                particle.size.status = AnimationStatus.increasing;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init() {\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.loops) !== null && _a !== void 0 ? _a : 0) <= 0 || ((_b = particle.size.loops) !== null && _b !== void 0 ? _b : 0) < ((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}