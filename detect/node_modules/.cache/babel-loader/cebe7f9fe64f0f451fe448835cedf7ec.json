{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\ASL\\\\detect\\\\src\\\\pages\\\\commonsigns.js\";\nimport React from \"react\";\nimport '../components/css/signs.css';\nimport { Pagination, PaginationItem, PaginationLink } from 'Reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.PureComponent {\n  constructor() {\n    super(); // create data set of random length\n\n    this.dataSet = [...Array(Math.ceil(500 + Math.random() * 500))].map((a, i) => \"Record \" + (i + 1));\n    this.pageSize = 50;\n    this.pagesCount = Math.ceil(this.dataSet.length / this.pageSize);\n    this.state = {\n      currentPage: 0\n    };\n  }\n\n  handleClick(e, index) {\n    e.preventDefault();\n    this.setState({\n      currentPage: index\n    });\n  }\n\n  render() {\n    const {\n      currentPage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          \"aria-label\": \"Page navigation example\",\n          children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n            disabled: currentPage <= 0,\n            children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n              onClick: e => this.handleClick(e, currentPage - 1),\n              previous: true,\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), [...Array(this.pagesCount)].map((page, i) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n            active: i === currentPage,\n            children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n              onClick: e => this.handleClick(e, i),\n              href: \"#\",\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n            disabled: currentPage >= this.pagesCount - 1,\n            children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n              onClick: e => this.handleClick(e, currentPage + 1),\n              next: true,\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), this.dataSet.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize).map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-slice\",\n        children: data\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/ASL/detect/src/pages/commonsigns.js"],"names":["React","Pagination","PaginationItem","PaginationLink","App","PureComponent","constructor","dataSet","Array","Math","ceil","random","map","a","i","pageSize","pagesCount","length","state","currentPage","handleClick","e","index","preventDefault","setState","render","page","slice","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../components/css/signs.css'\r\nimport { Pagination, PaginationItem, PaginationLink } from 'Reactstrap';\r\n\r\nclass App extends React.PureComponent {\r\n  \r\n  constructor() {\r\n    \r\n    super();\r\n\r\n    // create data set of random length\r\n    this.dataSet = [...Array(Math.ceil(500 + Math.random() * 500))].map(\r\n      (a, i) => \"Record \" + (i + 1)\r\n    );\r\n\r\n    this.pageSize = 50;\r\n    this.pagesCount = Math.ceil(this.dataSet.length / this.pageSize);\r\n\r\n    this.state = {\r\n      currentPage: 0\r\n    };\r\n    \r\n  }\r\n\r\n  handleClick(e, index) {\r\n    \r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      currentPage: index\r\n    });\r\n    \r\n  }\r\n\r\n  render() {\r\n    \r\n    const { currentPage } = this.state;\r\n\r\n    return (\r\n    \r\n      <React.Fragment>\r\n      \r\n        <div className=\"pagination-wrapper\">\r\n          \r\n          <Pagination aria-label=\"Page navigation example\">\r\n            \r\n            <PaginationItem disabled={currentPage <= 0}>\r\n              \r\n              <PaginationLink\r\n                onClick={e => this.handleClick(e, currentPage - 1)}\r\n                previous\r\n                href=\"#\"\r\n              />\r\n              \r\n            </PaginationItem>\r\n\r\n            {[...Array(this.pagesCount)].map((page, i) => \r\n              <PaginationItem active={i === currentPage} key={i}>\r\n                <PaginationLink onClick={e => this.handleClick(e, i)} href=\"#\">\r\n                  {i + 1}\r\n                </PaginationLink>\r\n              </PaginationItem>\r\n            )}\r\n\r\n            <PaginationItem disabled={currentPage >= this.pagesCount - 1}>\r\n              \r\n              <PaginationLink\r\n                onClick={e => this.handleClick(e, currentPage + 1)}\r\n                next\r\n                href=\"#\"\r\n              />\r\n              \r\n            </PaginationItem>\r\n            \r\n          </Pagination>\r\n          \r\n        </div>\r\n\r\n          {this.dataSet\r\n            .slice(\r\n              currentPage * this.pageSize,\r\n              (currentPage + 1) * this.pageSize\r\n            )\r\n            .map((data, i) => \r\n              <div className=\"data-slice\" key={i}>\r\n                {data}\r\n              </div>\r\n            )}\r\n\r\n      </React.Fragment>\r\n    \r\n    );\r\n  \r\n  }\r\n  \r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}