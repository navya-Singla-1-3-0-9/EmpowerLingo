{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _EmitterInstance_firstSpawn, _EmitterInstance_startParticlesAdded;\n\nimport { colorToHsl, deepExtend, getRangeValue, isPointInside, randomInRange } from \"tsparticles-engine\";\nimport { SizeMode } from \"tsparticles-engine\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nimport { ShapeManager } from \"./ShapeManager\";\nexport class EmitterInstance {\n  constructor(emitters, container, emitterOptions, position) {\n    var _a, _b, _c, _d, _e, _f;\n\n    var _g;\n\n    this.emitters = emitters;\n    this.container = container;\n\n    _EmitterInstance_firstSpawn.set(this, void 0);\n\n    _EmitterInstance_startParticlesAdded.set(this, void 0);\n\n    this.currentDuration = 0;\n    this.currentEmitDelay = 0;\n    this.currentSpawnDelay = 0;\n    this.initialPosition = position;\n    this.emitterOptions = deepExtend({}, emitterOptions);\n    this.spawnDelay = ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = emitterOptions.name;\n    this.shape = ShapeManager.getShape(emitterOptions.shape);\n    this.fill = emitterOptions.fill;\n\n    __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, !this.emitterOptions.life.wait, \"f\");\n\n    __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, false, \"f\");\n\n    let particlesOptions = deepExtend({}, this.emitterOptions.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : particlesOptions.move = {};\n    (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : _g.direction = this.emitterOptions.direction;\n\n    if (this.emitterOptions.spawnColor !== undefined) {\n      this.spawnColor = colorToHsl(this.emitterOptions.spawnColor);\n    }\n\n    this.paused = !this.emitterOptions.autoPlay;\n    this.particlesOptions = particlesOptions;\n    this.size = (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\n      const size = new EmitterSize();\n      size.load({\n        height: 0,\n        mode: SizeMode.percent,\n        width: 0\n      });\n      return size;\n    })();\n    this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n\n  externalPlay() {\n    this.paused = false;\n    this.play();\n  }\n\n  externalPause() {\n    this.paused = true;\n    this.pause();\n  }\n\n  play() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count) && (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\") || this.currentSpawnDelay >= ((_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0))) {\n      if (this.emitDelay === undefined) {\n        const delay = getRangeValue(this.emitterOptions.rate.delay);\n        this.emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n      }\n\n      if (this.lifeCount > 0 || this.immortal) {\n        this.prepareToDie();\n      }\n    }\n  }\n\n  pause() {\n    if (this.paused) {\n      return;\n    }\n\n    delete this.emitDelay;\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  update(delta) {\n    var _a, _b, _c;\n\n    if (this.paused) {\n      return;\n    }\n\n    if (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\")) {\n      __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, false, \"f\");\n\n      this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n      this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n    }\n\n    if (!__classPrivateFieldGet(this, _EmitterInstance_startParticlesAdded, \"f\")) {\n      __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, true, \"f\");\n\n      this.emitParticles(this.emitterOptions.startCount);\n    }\n\n    if (this.duration !== undefined) {\n      this.currentDuration += delta.value;\n\n      if (this.currentDuration >= this.duration) {\n        this.pause();\n\n        if (this.spawnDelay !== undefined) {\n          delete this.spawnDelay;\n        }\n\n        if (!this.immortal) {\n          this.lifeCount--;\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.position = this.calcPosition();\n          this.spawnDelay = ((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n        } else {\n          this.destroy();\n        }\n\n        this.currentDuration -= this.duration;\n        delete this.duration;\n      }\n    }\n\n    if (this.spawnDelay !== undefined) {\n      this.currentSpawnDelay += delta.value;\n\n      if (this.currentSpawnDelay >= this.spawnDelay) {\n        this.play();\n        this.currentSpawnDelay -= this.currentSpawnDelay;\n        delete this.spawnDelay;\n      }\n    }\n\n    if (this.emitDelay !== undefined) {\n      this.currentEmitDelay += delta.value;\n\n      if (this.currentEmitDelay >= this.emitDelay) {\n        this.emit();\n        this.currentEmitDelay -= this.emitDelay;\n      }\n    }\n  }\n\n  prepareToDie() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n      this.duration = duration * 1000;\n    }\n  }\n\n  destroy() {\n    this.emitters.removeEmitter(this);\n  }\n\n  calcPosition() {\n    var _a, _b;\n\n    const container = this.container;\n    const percentPosition = this.emitterOptions.position;\n    return {\n      x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n      y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n    };\n  }\n\n  emit() {\n    if (this.paused) {\n      return;\n    }\n\n    const quantity = getRangeValue(this.emitterOptions.rate.quantity);\n    this.emitParticles(quantity);\n  }\n\n  emitParticles(quantity) {\n    var _a, _b, _c;\n\n    const container = this.container;\n    const position = this.position;\n    const offset = {\n      x: this.size.mode === SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      y: this.size.mode === SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n\n    for (let i = 0; i < quantity; i++) {\n      const particlesOptions = deepExtend({}, this.particlesOptions);\n\n      if (this.spawnColor) {\n        const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n\n        if (colorAnimation) {\n          const hueAnimation = colorAnimation;\n\n          if (hueAnimation.enable) {\n            this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n          } else {\n            const hslAnimation = colorAnimation;\n            this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n            this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n            this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n          }\n        }\n\n        if (!particlesOptions.color) {\n          particlesOptions.color = {\n            value: this.spawnColor\n          };\n        } else {\n          particlesOptions.color.value = this.spawnColor;\n        }\n      }\n\n      const pPosition = (_c = (_b = this.shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, offset, this.fill)) !== null && _c !== void 0 ? _c : position;\n      container.particles.addParticle(pPosition, particlesOptions);\n    }\n  }\n\n  setColorAnimation(animation, initValue, maxValue) {\n    var _a;\n\n    const container = this.container;\n\n    if (!animation.enable) {\n      return initValue;\n    }\n\n    const colorOffset = randomInRange(animation.offset);\n    const delay = getRangeValue(this.emitterOptions.rate.delay);\n    const emitFactor = 1000 * delay / container.retina.reduceFactor;\n    const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n    return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n  }\n\n}\n_EmitterInstance_firstSpawn = new WeakMap(), _EmitterInstance_startParticlesAdded = new WeakMap();","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/node_modules/tsparticles-plugin-emitters/EmitterInstance.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_EmitterInstance_firstSpawn","_EmitterInstance_startParticlesAdded","colorToHsl","deepExtend","getRangeValue","isPointInside","randomInRange","SizeMode","EmitterSize","ShapeManager","EmitterInstance","constructor","emitters","container","emitterOptions","position","_a","_b","_c","_d","_e","_f","_g","currentDuration","currentEmitDelay","currentSpawnDelay","initialPosition","spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","shape","getShape","fill","wait","particlesOptions","particles","move","direction","spawnColor","undefined","paused","autoPlay","size","load","height","mode","percent","width","lifeCount","count","immortal","play","externalPlay","externalPause","pause","emitDelay","rate","prepareToDie","resize","canvas","update","delta","emitParticles","startCount","duration","destroy","emit","removeEmitter","percentPosition","x","Math","random","y","quantity","offset","i","colorAnimation","animation","hueAnimation","enable","h","setColorAnimation","hslAnimation","s","l","color","pPosition","randomPosition","addParticle","initValue","maxValue","colorOffset","emitFactor","colorSpeed","speed","fpsLimit","WeakMap"],"mappings":"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","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EmitterInstance_firstSpawn, _EmitterInstance_startParticlesAdded;\nimport { colorToHsl, deepExtend, getRangeValue, isPointInside, randomInRange } from \"tsparticles-engine\";\nimport { SizeMode } from \"tsparticles-engine\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nimport { ShapeManager } from \"./ShapeManager\";\nexport class EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n        var _a, _b, _c, _d, _e, _f;\n        var _g;\n        this.emitters = emitters;\n        this.container = container;\n        _EmitterInstance_firstSpawn.set(this, void 0);\n        _EmitterInstance_startParticlesAdded.set(this, void 0);\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        this.emitterOptions = deepExtend({}, emitterOptions);\n        this.spawnDelay = (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = emitterOptions.name;\n        this.shape = ShapeManager.getShape(emitterOptions.shape);\n        this.fill = emitterOptions.fill;\n        __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, !this.emitterOptions.life.wait, \"f\");\n        __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, false, \"f\");\n        let particlesOptions = deepExtend({}, this.emitterOptions.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : (particlesOptions.move = {});\n        (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : (_g.direction = this.emitterOptions.direction);\n        if (this.emitterOptions.spawnColor !== undefined) {\n            this.spawnColor = colorToHsl(this.emitterOptions.spawnColor);\n        }\n        this.paused = !this.emitterOptions.autoPlay;\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    externalPlay() {\n        this.paused = false;\n        this.play();\n    }\n    externalPause() {\n        this.paused = true;\n        this.pause();\n    }\n    play() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count) &&\n            (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\") || this.currentSpawnDelay >= ((_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0))) {\n            if (this.emitDelay === undefined) {\n                const delay = getRangeValue(this.emitterOptions.rate.delay);\n                this.emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        if (this.paused) {\n            return;\n        }\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this.paused) {\n            return;\n        }\n        if (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\")) {\n            __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, false, \"f\");\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!__classPrivateFieldGet(this, _EmitterInstance_startParticlesAdded, \"f\")) {\n            __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, true, \"f\");\n            this.emitParticles(this.emitterOptions.startCount);\n        }\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay =\n                        (((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.emitterOptions.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        if (this.paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.emitterOptions.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const container = this.container;\n        const position = this.position;\n        const offset = {\n            x: this.size.mode === SizeMode.percent\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            y: this.size.mode === SizeMode.percent\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, this.particlesOptions);\n            if (this.spawnColor) {\n                const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (colorAnimation) {\n                    const hueAnimation = colorAnimation;\n                    if (hueAnimation.enable) {\n                        this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n                    }\n                    else {\n                        const hslAnimation = colorAnimation;\n                        this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            const pPosition = (_c = (_b = this.shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, offset, this.fill)) !== null && _c !== void 0 ? _c : position;\n            container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset);\n        const delay = getRangeValue(this.emitterOptions.rate.delay);\n        const emitFactor = (1000 * delay) / container.retina.reduceFactor;\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n_EmitterInstance_firstSpawn = new WeakMap(), _EmitterInstance_startParticlesAdded = new WeakMap();\n"]},"metadata":{},"sourceType":"module"}