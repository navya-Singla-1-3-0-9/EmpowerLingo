{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl\\\\detect\\\\src\\\\pages\\\\practice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport { useParams } from \"react-router-dom\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport Cam from \"../components/webcam\";\nimport { drawHand } from \"../utilities\";\nimport * as fp from \"fingerpose\";\nimport Handsigns from './handsigns';\nimport { Signimage, Signpass } from './handimage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const {\n    letter\n  } = useParams();\n  const images = {\n    A: Signimage.A,\n    B: Signimage.B,\n    C: Signimage.C,\n    D: Signimage.D,\n    E: Signimage.E,\n    F: Signimage.F,\n    G: Signimage.G,\n    H: Signimage.H,\n    I: Signimage.I,\n    J: Signimage.J,\n    K: Signimage.K,\n    L: Signimage.L,\n    M: Signimage.M,\n    N: Signimage.N,\n    O: Signimage.O,\n    P: Signimage.P,\n    Q: Signimage.Q,\n    R: Signimage.R,\n    S: Signimage.S,\n    T: Signimage.T,\n    U: Signimage.U,\n    V: Signimage.V,\n    W: Signimage.W,\n    X: Signimage.X,\n    Y: Signimage.Y,\n    Z: Signimage.Z\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(Cam, {\n    letter: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"signs:\", Signpass[0]);\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const hand = await net.estimateHands(video); // console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([Handsigns.aSign, Handsigns.bSign, Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign, Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign, Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign, Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          const confidence = gesture.gestures.map(prediction => prediction.confidence);\n          const maxConfidence = confidence.indexOf(Math.max.apply(null, confidence)); //console.log(gesture.gestures[maxConfidence].name);\n          //console.log(Signpass[current].alt && Signpass[current]);\n\n          if (letter != null) {\n            console.log(letter);\n\n            if (Signpass[letter].alt === gesture.gestures[maxConfidence].name) {\n              swal( /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Hello world!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This is now rendered with JSX!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 15\n              }, this));\n            }\n          }\n\n          setEmoji(gesture.gestures[maxConfidence].name); //   console.log(emoji);\n        }\n      }\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runHandpose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 600,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), emoji !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[emoji],\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          bottom: 500,\n          right: 0,\n          textAlign: \"center\",\n          height: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this) : \"\", letter != null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Signpass[letter].src,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          width: 500,\n          left: 0,\n          textAlign: \"center\",\n          height: 480,\n          zIndex: 9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 28\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ndfIGwhxtk+E5BnH957FJ8pNO7E=\", false, function () {\n  return [useParams];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl/detect/src/pages/practice.js"],"names":["React","useRef","useState","useEffect","swal","useParams","tf","handpose","Webcam","Cam","drawHand","fp","Handsigns","Signimage","Signpass","App","props","letter","images","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","runHandpose","net","load","console","log","setInterval","detect","webcamRef","current","video","readyState","videoWidth","videoHeight","width","height","canvasRef","hand","estimateHands","length","GE","GestureEstimator","aSign","bSign","cSign","dSign","eSign","fSign","gSign","hSign","iSign","jSign","kSign","lSign","mSign","nSign","oSign","pSign","qSign","rSign","sSign","tSign","uSign","vSign","wSign","xSign","ySign","zSign","gesture","estimate","landmarks","gestures","undefined","confidence","map","prediction","maxConfidence","indexOf","Math","max","apply","alt","name","setEmoji","ctx","getContext","position","marginLeft","marginRight","right","textAlign","zindex","emoji","bottom","src","left","zIndex"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport Cam from \"../components/webcam\";\r\nimport { drawHand } from \"../utilities\";\r\n\r\nimport * as fp from \"fingerpose\";\r\nimport Handsigns from './handsigns'\r\nimport {Signimage,Signpass} from './handimage'\r\n\r\nfunction App(props) {\r\n  \r\n \r\n  const {letter}=useParams() \r\n  const images = { A: Signimage.A, \r\n    B: Signimage.B, \r\n    C: Signimage.C,\r\n    D: Signimage.D,\r\n    E:Signimage.E,\r\n    F:Signimage.F,\r\n    G:Signimage.G,\r\n    H:Signimage.H,\r\n    I:Signimage.I,\r\n    J:Signimage.J,\r\n    K:Signimage.K,\r\n    L:Signimage.L,\r\n    M: Signimage.M, \r\n    N: Signimage.N,\r\n    O: Signimage.O,\r\n    P:Signimage.P,\r\n    Q:Signimage.Q,\r\n    R:Signimage.R,\r\n    S:Signimage.S,\r\n    T:Signimage.T,\r\n    U:Signimage.U,\r\n    V:Signimage.V,\r\n    W:Signimage.W,\r\n    X:Signimage.X,\r\n    Y:Signimage.Y,\r\n    Z:Signimage.Z,\r\n  };\r\n \r\n \r\n  <Cam letter={letter}/>\r\n \r\n  const runHandpose = async () => {\r\n  \r\n    const net = await handpose.load();\r\n    \r\n    console.log(\"signs:\",Signpass[0]);\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      // console.log(hand);\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n         \r\n          Handsigns.aSign,\r\n          Handsigns.bSign,Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign,\r\n          Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign,\r\n          Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign,\r\n          Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n        \r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n           //console.log(gesture.gestures[maxConfidence].name);\r\n         \r\n           \r\n           //console.log(Signpass[current].alt && Signpass[current]);\r\n           if(letter!=null){\r\n             console.log(letter)\r\n           if (Signpass[letter].alt === gesture.gestures[maxConfidence].name) {\r\n            swal(\r\n              <div>\r\n                <h1>Hello world!</h1>\r\n                <p>\r\n                  This is now rendered with JSX!\r\n                </p>\r\n              </div>\r\n            )\r\n              \r\n           }\r\n           \r\n           \r\n          }\r\n            \r\n          \r\n         \r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n       //   console.log(emoji);\r\n        }\r\n      }\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n     \r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n         \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 600,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n      \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n           \r\n          }}\r\n        />\r\n        {/* NEW STUFF */}\r\n        {emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n           \r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n          {letter!=null ? (<img\r\n            src={Signpass[letter].src}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              width:500,\r\n              \r\n            left: 0,\r\n              textAlign: \"center\",\r\n              height: 480,\r\n              zIndex:9\r\n            }}\r\n          />):(\r\n            \"\"\r\n          )\r\n}\r\n\r\n       \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}