{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\pages\\\\transcribe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../components/css/login.css';\nimport { useParams } from \"react-router-dom\";\nimport { Redirect } from 'react-router-dom';\nimport NavBar from \"../components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Audio_link = () => {\n  _s();\n\n  const [audio_url, setAudio] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [id, setID] = useState(null);\n\n  const handleInputChange = event => {\n    const {\n      value\n    } = event.target;\n    setAudio(value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const data = {\n      audio_url\n    };\n    console.log(JSON.stringify(data));\n    setRedirect(true);\n    fetch(`http://localhost:3001/transcribe`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    }).then(response => response.json()).then(json => setID(json.result.id)).catch(error => console.log('Authorization failed : ' + error.message));\n  };\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/transcript/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), renderRedirect(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container fadeInDown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"formContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"active\",\n          children: \" Transcribe Audios!! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"fadeIn second\",\n            placeholder: \"Add Audio URL\",\n            name: \"audio_url\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"fadeIn fourth\",\n            value: \"Transcribe this!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Audio_link, \"33pBNhuVP/K6Z8T686hA6IubGVM=\");\n\n_c = Audio_link;\nexport default Audio_link;\n\nvar _c;\n\n$RefreshReg$(_c, \"Audio_link\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/pages/transcribe.js"],"names":["React","useState","useParams","Redirect","NavBar","Audio_link","audio_url","setAudio","redirect","setRedirect","id","setID","handleInputChange","event","value","target","onSubmit","preventDefault","data","console","log","JSON","stringify","fetch","method","headers","body","credentials","then","response","json","result","catch","error","message","renderRedirect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,6BAAP;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,MAAMC,UAAU,GAAC,MAAI;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAWC,QAAX,IAAqBN,QAAQ,CAAC,IAAD,CAAnC;AACH,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACG,QAAM,CAACS,EAAD,EAAIC,KAAJ,IAAYV,QAAQ,CAAC,IAAD,CAA1B;;AACF,QAAMW,iBAAiB,GAAIC,KAAD,IAAW;AACrC,UAAM;AAAEC,MAAAA;AAAF,QAAWD,KAAK,CAACE,MAAvB;AACAR,IAAAA,QAAQ,CAACO,KAAD,CAAR;AACE,GAHF;;AAKC,QAAME,QAAQ,GAAIH,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,IAAI,GAAE;AAACZ,MAAAA;AAAD,KAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ;AACAT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACKc,IAAAA,KAAK,CAAE,kCAAF,EAAqC;AAC5CC,MAAAA,MAAM,EAAC,MADqC;AAG5CC,MAAAA,OAAO,EAAC;AAAC,kBAAU,kBAAX;AAA8B,wBAAe;AAA7C,OAHoC;AAI5CC,MAAAA,IAAI,EAACL,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAJuC;AAK5CS,MAAAA,WAAW,EAAE;AAL+B,KAArC,CAAL,CAMIC,IANJ,CAMSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANrB,EAODF,IAPC,CAOIE,IAAI,IAAInB,KAAK,CAACmB,IAAI,CAACC,MAAL,CAAYrB,EAAb,CAPjB,EAQDsB,KARC,CAQKC,KAAK,IAAId,OAAO,CAACC,GAAR,CAAY,4BAA4Ba,KAAK,CAACC,OAA9C,CARd;AAWH,GAjBD;;AAkBF,QAAOC,cAAc,GAAG,MAAM;AAC5B,QAAI3B,QAAJ,EAAc;AACf,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,eAAcE,EAAG;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACE;AACF,GAJD;;AAMG,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACF,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADE,EAEDyB,cAAc,EAFb,eAGM;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACT;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,gCAEE;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAM,UAAA,QAAQ,EAAEnB,QAAhB;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,eAA7B;AAA6C,YAAA,WAAW,EAAC,eAAzD;AAAyE,YAAA,IAAI,EAAC,WAA9E;AAA2F,YAAA,QAAQ,EAAEJ;AAArG;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAC,eAA/B;AAA+C,YAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBH,CArDD;;GAAMP,U;;KAAAA,U;AAsDN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport '../components/css/login.css'\r\nimport {useParams} from \"react-router-dom\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport NavBar from \"../components/navbar\";\r\n\r\n\r\nconst Audio_link=()=>{\r\n    const [audio_url,setAudio]=useState(null);\r\n\tconst [redirect,setRedirect]= useState(false);\r\n    const [id,setID]= useState(null);\r\n\t const handleInputChange = (event) => {\r\n\t\tconst { value} = event.target;\r\n\t\tsetAudio(value)\r\n\t  }\r\n    \r\n\t  const onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tconst data= {audio_url}\r\n\t\tconsole.log(JSON.stringify(data))\r\n\t\tsetRedirect(true)\r\n       fetch(`http://localhost:3001/transcribe`, { \r\n\t\t   method:'POST',\r\n\t\t   \r\n\t\t   headers:{'Accept': 'application/json',\"Content-Type\":\"application/json\"},\r\n\t\t   body:JSON.stringify(data),\r\n\t\t   credentials: 'include'\r\n\t\t   })   .then(response => response.json())\r\n\t\t   .then(json => setID(json.result.id))\r\n\t\t   .catch(error => console.log('Authorization failed : ' + error.message));\r\n\r\n          \r\n\t  }\r\n\tconst  renderRedirect = () => {\r\n\t  if (redirect) {\r\n\t\treturn <Redirect to={`/transcript/${id}`} />\r\n\t  }\r\n\t}\r\n\r\n    return(\r\n      <div className=\"login\">\r\n\t\t  <NavBar/>\r\n\t\t  {renderRedirect()}\r\n            <div className=\"container fadeInDown\">\r\n\t  <div id=\"formContent\">\r\n\t\r\n\t    <h2 className=\"active\"> Transcribe Audios!! </h2>\r\n\t \r\n\t    <form onSubmit={onSubmit}>\r\n\t      <input type=\"text\" className=\"fadeIn second\" placeholder=\"Add Audio URL\" name=\"audio_url\"  onChange={handleInputChange}/>\r\n\t      <input type=\"submit\" className=\"fadeIn fourth\" value=\"Transcribe this!\"/>\r\n\t    </form>   \r\n\t  \r\n\t  \r\n\t  </div>\r\n\t</div>\r\n\t</div>\r\n    \r\n    );\r\n}\r\nexport default Audio_link"]},"metadata":{},"sourceType":"module"}