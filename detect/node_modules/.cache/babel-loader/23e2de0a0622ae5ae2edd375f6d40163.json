{"ast":null,"code":"/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\nvar isExtglob = require('is-extglob');\n\nvar chars = {\n  '{': '}',\n  '(': ')',\n  '[': ']'\n};\n\nvar strictCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n\n  var index = 0;\n\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '[' && str[index + 1] !== ']') {\n      var closeIndex = str.indexOf(']', index);\n\n      if (closeIndex > index) {\n        var slashIndex = str.indexOf('\\\\', index);\n\n        if (slashIndex === -1 || slashIndex > closeIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (str[index] === '{' && str[index + 1] !== '}') {\n      closeIndex = str.indexOf('}', index);\n\n      if (closeIndex > index) {\n        slashIndex = str.indexOf('\\\\', index);\n\n        if (slashIndex === -1 || slashIndex > closeIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeIndex = str.indexOf(')', index);\n\n      if (closeIndex > index) {\n        slashIndex = str.indexOf('\\\\', index);\n\n        if (slashIndex === -1 || slashIndex > closeIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (str[index] === '(' && str[index + 1] !== '|') {\n      var pipeIndex = str.indexOf('|', index);\n\n      if (pipeIndex > index && str[pipeIndex + 1] !== ')') {\n        closeIndex = str.indexOf(')', pipeIndex);\n\n        if (closeIndex > pipeIndex) {\n          slashIndex = str.indexOf('\\\\', pipeIndex);\n\n          if (slashIndex === -1 || slashIndex > closeIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n\n  return false;\n};\n\nvar relaxedCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n\n  var index = 0;\n\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck; // optionally relax check\n\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/ASL/detect/node_modules/is-glob/index.js"],"names":["isExtglob","require","chars","strictCheck","str","index","length","test","closeIndex","indexOf","slashIndex","pipeIndex","open","close","n","relaxedCheck","module","exports","isGlob","options","check","strict"],"mappings":"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","sourcesContent":["/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '[' && str[index + 1] !== ']') {\n      var closeIndex = str.indexOf(']', index);\n      if (closeIndex > index) {\n        var slashIndex = str.indexOf('\\\\', index);\n        if (slashIndex === -1 || slashIndex > closeIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (str[index] === '{' && str[index + 1] !== '}') {\n      closeIndex = str.indexOf('}', index);\n      if (closeIndex > index) {\n        slashIndex = str.indexOf('\\\\', index);\n        if (slashIndex === -1 || slashIndex > closeIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeIndex = str.indexOf(')', index);\n      if (closeIndex > index) {\n        slashIndex = str.indexOf('\\\\', index);\n        if (slashIndex === -1 || slashIndex > closeIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (str[index] === '(' && str[index + 1] !== '|') {\n      var pipeIndex = str.indexOf('|', index);\n      if (pipeIndex > index && str[pipeIndex + 1] !== ')') {\n        closeIndex = str.indexOf(')', pipeIndex);\n        if (closeIndex > pipeIndex) {\n          slashIndex = str.indexOf('\\\\', pipeIndex);\n          if (slashIndex === -1 || slashIndex > closeIndex) {\n           return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index+1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n}\n\nvar relaxedCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index+1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n}\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n}\n"]},"metadata":{},"sourceType":"script"}