{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\pages\\\\EngToASL.js\";\nimport React from \"react\";\nimport '../components/css/translated.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from \"../components/navbar\";\nimport Particles from \"react-tsparticles\";\nimport { Main } from \"tsparticles-engine\";\nimport { loadBubblesPreset } from \"tsparticles-preset-bubbles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Translate extends React.Component {\n  constructor() {\n    super();\n\n    this.importAll = r => {\n      let images = {};\n      r.keys().map((item, index) => {\n        images[item.replace('./', '')] = r(item);\n      });\n      return images;\n    };\n\n    this.images = this.importAll(require.context('../components/images/keys', false, /\\.(png|jpe?g|svg)$/));\n\n    this.addText = event => {\n      //   console.log(event.target.value);\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.translate = () => {\n      let a = this.state.text.toUpperCase().split(\"\");\n      console.log(this.images);\n      let tt = [];\n      a.map(letter => {\n        {\n          tt.push(letter >= 'A' && letter <= 'Z' ? this.images[`${letter}.jpg`].default : \"\");\n        }\n        ;\n      });\n      console.log(tt);\n      this.setState({\n        translated: tt\n      });\n    };\n\n    this.state = {\n      text: \"\",\n      translated: []\n    };\n  }\n\n  customInit(main) {\n    // this adds the preset to tsParticles, you can safely use the\n    loadBubblesPreset(main);\n  }\n\n  render() {\n    const options = {\n      particles: {\n        move: {\n          speed: 10,\n          outModes: {\n            default: \"destroy\",\n            bottom: \"none\"\n          }\n        },\n        size: {\n          value: 30\n        }\n      },\n      emitters: {\n        direction: \"top\",\n        size: {\n          width: 200,\n          height: 0\n        },\n        color: {\n          value: \"#ffffff\"\n        },\n        position: {\n          x: 50,\n          y: 101\n        },\n        rate: {\n          quantity: 5,\n          delay: 0.3\n        }\n      },\n      background: {\n        image: \"url('https://hdwallsource.com/img/2014/4/digital-wallpapers-24971-25651-hd-wallpapers.jpg')\",\n        size: \"100% 100%\",\n        repeat: \"no-repeat\"\n      },\n      preset: \"bubbles\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Particles, {\n        id: \"tsparticles\",\n        init: particlesInit,\n        loaded: particlesLoaded,\n        options: {\n          background: {\n            color: {\n              value: \"#0d47a1\"\n            }\n          },\n          fpsLimit: 60,\n          interactivity: {\n            detectsOn: \"canvas\",\n            events: {\n              onClick: {\n                enable: true,\n                mode: \"push\"\n              },\n              onHover: {\n                enable: true,\n                mode: \"repulse\"\n              },\n              resize: true\n            },\n            modes: {\n              bubble: {\n                distance: 400,\n                duration: 2,\n                opacity: 0.8,\n                size: 40\n              },\n              push: {\n                quantity: 4\n              },\n              repulse: {\n                distance: 200,\n                duration: 0.4\n              }\n            }\n          },\n          particles: {\n            color: {\n              value: \"#ffffff\"\n            },\n            links: {\n              color: \"#ffffff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1\n            },\n            collisions: {\n              enable: true\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 6,\n              straight: false\n            },\n            number: {\n              density: {\n                enable: true,\n                value_area: 800\n              },\n              value: 80\n            },\n            opacity: {\n              value: 0.5\n            },\n            shape: {\n              type: \"circle\"\n            },\n            size: {\n              random: true,\n              value: 5\n            }\n          },\n          detectRetina: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center \",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: this.addText,\n            placeholder: \"Enter Text to be translated\",\n            style: {\n              color: \"white\",\n              border: \"3px solid gray\",\n              height: \"150px\",\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: this.translate,\n          children: \"Translate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"translated\",\n        children: this.state.translated.map(link => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: link != \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Translate;","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/pages/EngToASL.js"],"names":["React","NavBar","Particles","Main","loadBubblesPreset","Translate","Component","constructor","importAll","r","images","keys","map","item","index","replace","require","context","addText","event","setState","text","target","value","translate","a","state","toUpperCase","split","console","log","tt","letter","push","default","translated","customInit","main","render","options","particles","move","speed","outModes","bottom","size","emitters","direction","width","height","color","position","x","y","rate","quantity","delay","background","image","repeat","preset","minHeight","particlesInit","particlesLoaded","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","repulse","links","collisions","outMode","random","straight","number","density","value_area","shape","type","detectRetina","border","link"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../components/css/translated.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBar from \"../components/navbar\";\r\n\r\nimport Particles from \"react-tsparticles\";\r\nimport { Main } from \"tsparticles-engine\";\r\nimport { loadBubblesPreset } from \"tsparticles-preset-bubbles\";\r\n\r\nclass Translate extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            text:\"\",\r\n            translated:[]\r\n        }\r\n    }\r\n    importAll=(r)=> {\r\n        let images = {};\r\n        r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\r\n        return images;\r\n      }\r\n      \r\n      images = this.importAll(require.context('../components/images/keys', false, /\\.(png|jpe?g|svg)$/));\r\n    \r\n  \r\n    addText=(event)=>{\r\n     //   console.log(event.target.value);\r\n        this.setState({text:event.target.value});\r\n    }\r\n    translate=()=>{\r\n        let a= this.state.text.toUpperCase().split(\"\");\r\n        console.log(this.images);\r\n        let tt=[];\r\n        a.map((letter)=>{\r\n           {tt.push((letter>='A' && letter<='Z')?this.images[`${letter}.jpg`].default:\"\")};\r\n        })\r\n        console.log(tt);\r\n        this.setState({translated:tt});\r\n    }\r\n    customInit(main: Main) {\r\n        // this adds the preset to tsParticles, you can safely use the\r\n        loadBubblesPreset(main);\r\n      }\r\n    render(){\r\n        const options = {\r\n            particles: {\r\n              move: {\r\n                speed: 10,\r\n                outModes: {\r\n                  default: \"destroy\",\r\n                  bottom: \"none\"\r\n                }\r\n              },\r\n              size: {\r\n                value: 30\r\n              }\r\n            },\r\n            emitters: {\r\n              direction: \"top\",\r\n              size: {\r\n                width: 200,\r\n                height: 0\r\n              },\r\n              color: {\r\n                value: \"#ffffff\"\r\n              },\r\n              position: {\r\n                x: 50,\r\n                y: 101\r\n              },\r\n              rate: {\r\n                quantity: 5,\r\n                delay: 0.3\r\n              }\r\n            },\r\n            background: {\r\n              image:\r\n                \"url('https://hdwallsource.com/img/2014/4/digital-wallpapers-24971-25651-hd-wallpapers.jpg')\",\r\n              size: \"100% 100%\",\r\n              repeat: \"no-repeat\"\r\n            },\r\n            \r\n            preset: \"bubbles\",\r\n          };\r\n\r\n        return(\r\n            <div style={{minHeight:\"100vh\"}}>\r\n                <NavBar/>\r\n                <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      loaded={particlesLoaded}\r\n      options={{\r\n        background: {\r\n          color: {\r\n            value: \"#0d47a1\",\r\n          },\r\n        },\r\n        fpsLimit: 60,\r\n        interactivity: {\r\n          detectsOn: \"canvas\",\r\n          events: {\r\n            onClick: {\r\n              enable: true,\r\n              mode: \"push\",\r\n            },\r\n            onHover: {\r\n              enable: true,\r\n              mode: \"repulse\",\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            bubble: {\r\n              distance: 400,\r\n              duration: 2,\r\n              opacity: 0.8,\r\n              size: 40,\r\n            },\r\n            push: {\r\n              quantity: 4,\r\n            },\r\n            repulse: {\r\n              distance: 200,\r\n              duration: 0.4,\r\n            },\r\n          },\r\n        },\r\n        particles: {\r\n          color: {\r\n            value: \"#ffffff\",\r\n          },\r\n          links: {\r\n            color: \"#ffffff\",\r\n            distance: 150,\r\n            enable: true,\r\n            opacity: 0.5,\r\n            width: 1,\r\n          },\r\n          collisions: {\r\n            enable: true,\r\n          },\r\n          move: {\r\n            direction: \"none\",\r\n            enable: true,\r\n            outMode: \"bounce\",\r\n            random: false,\r\n            speed: 6,\r\n            straight: false,\r\n          },\r\n          number: {\r\n            density: {\r\n              enable: true,\r\n              value_area: 800,\r\n            },\r\n            value: 80,\r\n          },\r\n          opacity: {\r\n            value: 0.5,\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n          },\r\n          size: {\r\n            random: true,\r\n            value: 5,\r\n          },\r\n        },\r\n        detectRetina: true,\r\n      }}\r\n    />\r\n            <div className=\"main text-center\">\r\n                <div className=\"text-center \">\r\n                    <textarea onChange={this.addText} placeholder=\"Enter Text to be translated\" style={{color:\"white\", border:\"3px solid gray\", height:\"150px\", width:\"100%\"}}></textarea>\r\n                </div>\r\n                <button className= \"btn btn-warning\" onClick={this.translate}>Translate</button>\r\n             \r\n            </div>\r\n            <div className=\"translated\">\r\n                    {\r\n                        this.state.translated.map(link=>{\r\n                            return(\r\n                                <span>{\r\n                                \r\n                                (link!=\"\")?<img src={link}/>:<br/>\r\n                            }\r\n                            </span>)\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Translate;"]},"metadata":{},"sourceType":"module"}