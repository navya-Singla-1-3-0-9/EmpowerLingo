{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\pages\\\\commonsigns.js\";\nimport React, { Component } from \"react\";\nimport '../components/css/signs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass signApp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      signs: [{\n        title: \"Good Morning\",\n        url: \"https://thumbs.gfycat.com/HeartfeltLateBrocketdeer-max-1mb.gif\",\n        instructions: \"This is a two part sign. First sign good by touching one flat hand to your chin and bringing it down to meet your other hand, which is at about waist height and palm up.Next sign “morning” by bending the elbow of one arm, leaving the arm parallel to your body, and resting the finger tips in the crook of the elbow of your second arm. With the second hand, bring the flat and palm up hand from under the first arm up and towards you – like the sun coming up over the horizon.Put together, this is a Good – Morning!\"\n      }, {\n        title: \"Good Night\",\n        url: \"https://thumbs.gfycat.com/MistySnarlingAnglerfish-size_restricted.gif\",\n        instructions: 'This is a two part sign. First sign “good” by touching one flat hand to your chin and bringing it down to meet your other hand, which is at about waistheight and palm up. Next sign night by bringing one arm parallel to your body and then rest the forearm of the second arm on the fingertips of the first. Slowly lower thesecond hand down like the sun is setting over the horizon.  Put together this is Good – Night!'\n      }, {\n        title: \"hello\",\n        url: \"https://c.tenor.com/VpGTBesoKX8AAAAC/tuna-rungu-hello.gif\",\n        instructions: \"Extend your fingers and cross your thumb in front of your palm. Then, starting with your hand in front of your ear, flick it outward and away from your body.          \"\n      }, {\n        title: \"Thank you\",\n        url: \"https://images.ctfassets.net/vz6nkkbc6q75/2wHIqJmIziBv5PODZThVlu/9c46b5c9fe7666aa767d2d48c6bf8095/Thank_2BYou_2BSmaller.gif\",\n        instructions: \"Start with your dominant hand. Then place your fingers near your lips, with your hand as flat as possible. Move your hand forward and slightly downwards toward the person you are thanking.\"\n      }, {}],\n      currentPage: 1,\n      signsPerPage: 5\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n\n  render() {\n    const {\n      signs,\n      currentPage,\n      signsPerPage\n    } = this.state; // Logic for displaying current signs\n\n    const indexOfLastsign = currentPage * signsPerPage;\n    const indexOfFirstsign = indexOfLastsign - signsPerPage;\n    const currentsigns = signs.slice(indexOfFirstsign, indexOfLastsign);\n    const rendersigns = currentsigns.map((sign, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"black\",\n            textAlign: \"left\"\n          },\n          children: sign.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sign.url\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: sign.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(signs.length / signsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: this.handleClick,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          color: \"black\"\n        },\n        children: rendersigns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"page-numbers\",\n        children: renderPageNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default signApp;","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/pages/commonsigns.js"],"names":["React","Component","signApp","constructor","state","signs","title","url","instructions","currentPage","signsPerPage","handleClick","bind","event","setState","Number","target","id","render","indexOfLastsign","indexOfFirstsign","currentsigns","slice","rendersigns","map","sign","index","color","textAlign","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../components/css/signs.css'\r\nclass signApp extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        signs: [{\r\n          title:\"Good Morning\",\r\n            url:\"https://thumbs.gfycat.com/HeartfeltLateBrocketdeer-max-1mb.gif\",\r\n            instructions: \"This is a two part sign. First sign good by touching one flat hand to your chin and bringing it down to meet your other hand, which is at about waist height and palm up.Next sign “morning” by bending the elbow of one arm, leaving the arm parallel to your body, and resting the finger tips in the crook of the elbow of your second arm. With the second hand, bring the flat and palm up hand from under the first arm up and towards you – like the sun coming up over the horizon.Put together, this is a Good – Morning!\"\r\n        \r\n          },\r\n        {\r\n          title:\"Good Night\",\r\n          url:\"https://thumbs.gfycat.com/MistySnarlingAnglerfish-size_restricted.gif\",\r\n          instructions:'This is a two part sign. First sign “good” by touching one flat hand to your chin and bringing it down to meet your other hand, which is at about waistheight and palm up. Next sign night by bringing one arm parallel to your body and then rest the forearm of the second arm on the fingertips of the first. Slowly lower thesecond hand down like the sun is setting over the horizon.  Put together this is Good – Night!'\r\n\r\n        },\r\n        {\r\n          title:\"hello\",\r\n          url:\"https://c.tenor.com/VpGTBesoKX8AAAAC/tuna-rungu-hello.gif\",\r\n          instructions:\"Extend your fingers and cross your thumb in front of your palm. Then, starting with your hand in front of your ear, flick it outward and away from your body.          \"\r\n        },\r\n        {\r\n          title: \"Thank you\",\r\n          url:\"https://images.ctfassets.net/vz6nkkbc6q75/2wHIqJmIziBv5PODZThVlu/9c46b5c9fe7666aa767d2d48c6bf8095/Thank_2BYou_2BSmaller.gif\",\r\n          instructions:\"Start with your dominant hand. Then place your fingers near your lips, with your hand as flat as possible. Move your hand forward and slightly downwards toward the person you are thanking.\"\r\n        },\r\n        {\r\n\r\n        }],\r\n        currentPage: 1,\r\n        signsPerPage: 5\r\n      };\r\n      this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n      this.setState({\r\n        currentPage: Number(event.target.id)\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { signs, currentPage, signsPerPage } = this.state;\r\n\r\n      // Logic for displaying current signs\r\n      const indexOfLastsign = currentPage * signsPerPage;\r\n      const indexOfFirstsign = indexOfLastsign - signsPerPage;\r\n      const currentsigns = signs.slice(indexOfFirstsign, indexOfLastsign);\r\n\r\n      const rendersigns = currentsigns.map((sign, index) => {\r\n        return (<div key={index}>\r\n          <h1 style={{color:\"black\",textAlign:\"left\"}}>{sign.title}</h1>\r\n          <img key={index} src={sign.url}/>\r\n        <p>{sign.instructions}</p>\r\n        <hr/></div>);\r\n      });\r\n\r\n      // Logic for displaying page numbers\r\n      const pageNumbers = [];\r\n      for (let i = 1; i <= Math.ceil(signs.length / signsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n\r\n      const renderPageNumbers = pageNumbers.map(number => {\r\n        return (\r\n          <li\r\n            key={number}\r\n            id={number}\r\n            onClick={this.handleClick}\r\n          >\r\n            {number}\r\n          </li>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div>\r\n          <ul style={{color:\"black\"}}>\r\n            {rendersigns}\r\n          </ul>\r\n          <ul id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  export default signApp"]},"metadata":{},"sourceType":"module"}