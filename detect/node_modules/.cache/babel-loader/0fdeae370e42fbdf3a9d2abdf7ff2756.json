{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\pages\\\\transcript.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transcript = () => {\n  _s();\n\n  const {\n    trans_id\n  } = useParams();\n  const [ttext, setText] = useState(null);\n  let text = \"\";\n  React.useEffect(() => {\n    fetch(`/transcript/${trans_id}`).then(res => res.json()).then(data => {\n      if (data) {\n        console.log(data.transcript.words); //console.log(text);\n\n        setText(text);\n      }\n    });\n  }, []);\n  console.log(ttext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !ttext ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ttext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Transcript, \"lhMe0upvYomlwLNvqGlGYnKM3xY=\", false, function () {\n  return [useParams];\n});\n\n_c = Transcript;\nexport default Transcript;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/pages/transcript.js"],"names":["React","useState","useParams","Transcript","trans_id","ttext","setText","text","useEffect","fetch","then","res","json","data","console","log","transcript","words"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;AAEA,MAAMC,UAAU,GAAC,MAAI;AAAA;;AACjB,QAAM;AAACC,IAAAA;AAAD,MAAYF,SAAS,EAA3B;AACA,QAAM,CAACG,KAAD,EAAOC,OAAP,IAAiBL,QAAQ,CAAC,IAAD,CAA/B;AACA,MAAIM,IAAI,GAAC,EAAT;AACJP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAE,eAAcL,QAAS,EAAzB,CAAL,CACGM,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACZ,UAAGA,IAAH,EAAQ;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAL,CAAgBC,KAA5B,EADU,CAER;;AACAX,QAAAA,OAAO,CAACC,IAAD,CAAP;AACD;AACF,KARH;AASD,GAVH,EAUK,EAVL;AAWEO,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA,sBACI;AAAA,cACQ,CAACA,KAAD,gBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,gBAAyB;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADjC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD,CAtBD;;GAAMF,U;UACgBD,S;;;KADhBC,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Transcript=()=>{\r\n    const {trans_id}= useParams();\r\n    const [ttext,setText]= useState(null);\r\n    let text=\"\";\r\nReact.useEffect(() => {\r\n    fetch(`/transcript/${trans_id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n          if(data){\r\n        console.log(data.transcript.words)\r\n          //console.log(text);\r\n          setText(text);\r\n        }\r\n      });\r\n  }, []);\r\n  console.log(ttext);\r\n\r\n  return (\r\n      <div>\r\n            {(!ttext?<p>LOADING...</p>:<p>{ttext}</p>)}\r\n      </div>\r\n  )\r\n}\r\nexport default Transcript"]},"metadata":{},"sourceType":"module"}