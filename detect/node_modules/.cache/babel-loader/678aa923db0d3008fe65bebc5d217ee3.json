{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl\\\\detect\\\\src\\\\pages\\\\practice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"../utilities\";\nimport * as fp from \"fingerpose\";\nimport Handsigns from './handsigns';\nimport { Signimage, Signpass } from './handimage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [emoji, setEmoji] = useState(null);\n  let letters = ['A', 'B', 'C'];\n  const images = {\n    A: Signimage.A,\n    B: Signimage.B,\n    C: Signimage.C,\n    D: Signimage.D,\n    E: Signimage.E,\n    F: Signimage.F,\n    G: Signimage.G,\n    H: Signimage.H,\n    I: Signimage.I,\n    J: Signimage.J,\n    K: Signimage.K,\n    L: Signimage.L,\n    M: Signimage.M,\n    N: Signimage.N,\n    O: Signimage.O,\n    P: Signimage.P,\n    Q: Signimage.Q,\n    R: Signimage.R,\n    S: Signimage.S,\n    T: Signimage.T,\n    U: Signimage.U,\n    V: Signimage.V,\n    W: Signimage.W,\n    X: Signimage.X,\n    Y: Signimage.Y,\n    Z: Signimage.Z\n  };\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const pickRandom = () => {\n    let random = Math.floor(Math.random() * 26);\n    let letter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    return letter[random];\n  };\n\n  pickRandom();\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const hand = await net.estimateHands(video); // console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([Handsigns.aSign, Handsigns.bSign, Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign, Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign, Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign, Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          const confidence = gesture.gestures.map(prediction => prediction.confidence);\n          const maxConfidence = confidence.indexOf(Math.max.apply(null, confidence));\n          console.log(gesture.gestures[maxConfidence].name);\n          setEmoji(gesture.gestures[maxConfidence].name); //   console.log(emoji);\n        }\n      }\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runHandpose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Signpass.pickRandom()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), emoji !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[emoji],\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          bottom: 500,\n          right: 0,\n          textAlign: \"center\",\n          height: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cK2KWSG+h4TrDH7vFOsftQI8T8o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl/detect/src/pages/practice.js"],"names":["React","useRef","useState","useEffect","tf","handpose","Webcam","drawHand","fp","Handsigns","Signimage","Signpass","App","webcamRef","canvasRef","emoji","setEmoji","letters","images","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","runHandpose","net","load","console","log","setInterval","detect","pickRandom","random","Math","floor","letter","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","length","GE","GestureEstimator","aSign","bSign","cSign","dSign","eSign","fSign","gSign","hSign","iSign","jSign","kSign","lSign","mSign","nSign","oSign","pSign","qSign","rSign","sSign","tSign","uSign","vSign","wSign","xSign","ySign","zSign","gesture","estimate","landmarks","gestures","undefined","confidence","map","prediction","maxConfidence","indexOf","max","apply","name","ctx","getContext","position","marginLeft","marginRight","right","textAlign","zindex","bottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,aAAjC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMa,SAAS,GAAGb,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,MAAIe,OAAO,GAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAZ;AACA,QAAMC,MAAM,GAAG;AAAEC,IAAAA,CAAC,EAAET,SAAS,CAACS,CAAf;AACbC,IAAAA,CAAC,EAAEV,SAAS,CAACU,CADA;AAEbC,IAAAA,CAAC,EAAEX,SAAS,CAACW,CAFA;AAGbC,IAAAA,CAAC,EAAEZ,SAAS,CAACY,CAHA;AAIbC,IAAAA,CAAC,EAACb,SAAS,CAACa,CAJC;AAKbC,IAAAA,CAAC,EAACd,SAAS,CAACc,CALC;AAMbC,IAAAA,CAAC,EAACf,SAAS,CAACe,CANC;AAObC,IAAAA,CAAC,EAAChB,SAAS,CAACgB,CAPC;AAQbC,IAAAA,CAAC,EAACjB,SAAS,CAACiB,CARC;AASbC,IAAAA,CAAC,EAAClB,SAAS,CAACkB,CATC;AAUbC,IAAAA,CAAC,EAACnB,SAAS,CAACmB,CAVC;AAWbC,IAAAA,CAAC,EAACpB,SAAS,CAACoB,CAXC;AAYbC,IAAAA,CAAC,EAAErB,SAAS,CAACqB,CAZA;AAabC,IAAAA,CAAC,EAAEtB,SAAS,CAACsB,CAbA;AAcbC,IAAAA,CAAC,EAAEvB,SAAS,CAACuB,CAdA;AAebC,IAAAA,CAAC,EAACxB,SAAS,CAACwB,CAfC;AAgBbC,IAAAA,CAAC,EAACzB,SAAS,CAACyB,CAhBC;AAiBbC,IAAAA,CAAC,EAAC1B,SAAS,CAAC0B,CAjBC;AAkBbC,IAAAA,CAAC,EAAC3B,SAAS,CAAC2B,CAlBC;AAmBbC,IAAAA,CAAC,EAAC5B,SAAS,CAAC4B,CAnBC;AAoBbC,IAAAA,CAAC,EAAC7B,SAAS,CAAC6B,CApBC;AAqBbC,IAAAA,CAAC,EAAC9B,SAAS,CAAC8B,CArBC;AAsBbC,IAAAA,CAAC,EAAC/B,SAAS,CAAC+B,CAtBC;AAuBbC,IAAAA,CAAC,EAAChC,SAAS,CAACgC,CAvBC;AAwBbC,IAAAA,CAAC,EAACjC,SAAS,CAACiC,CAxBC;AAyBbC,IAAAA,CAAC,EAAClC,SAAS,CAACkC;AAzBC,GAAf;;AA6BA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMzC,QAAQ,CAAC0C,IAAT,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAF8B,CAG9B;;AACAC,IAAAA,WAAW,CAAC,MAAM;AAChBC,MAAAA,MAAM,CAACL,GAAD,CAAN;AACD,KAFU,EAER,EAFQ,CAAX;AAGD,GAPD;;AAQA,QAAMM,UAAU,GAAE,MAAI;AACpB,QAAIC,MAAM,GAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,EAAzB,CAAZ;AACA,QAAIG,MAAM,GAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,EAAqE,GAArE,EAAyE,GAAzE,EAA6E,GAA7E,EAAiF,GAAjF,EAAqF,GAArF,EAAyF,GAAzF,EAA6F,GAA7F,EAAiG,GAAjG,EAAqG,GAArG,CAAZ;AACA,WAAOA,MAAM,CAACH,MAAD,CAAb;AACD,GAJD;;AAKAD,EAAAA,UAAU;;AAEV,QAAMD,MAAM,GAAG,MAAOL,GAAP,IAAe;AAC5B;AACA,QACE,OAAOjC,SAAS,CAAC4C,OAAjB,KAA6B,WAA7B,IACA5C,SAAS,CAAC4C,OAAV,KAAsB,IADtB,IAEA5C,SAAS,CAAC4C,OAAV,CAAkBC,KAAlB,CAAwBC,UAAxB,KAAuC,CAHzC,EAIE;AACA;AACA,YAAMD,KAAK,GAAG7C,SAAS,CAAC4C,OAAV,CAAkBC,KAAhC;AACA,YAAME,UAAU,GAAG/C,SAAS,CAAC4C,OAAV,CAAkBC,KAAlB,CAAwBE,UAA3C;AACA,YAAMC,WAAW,GAAGhD,SAAS,CAAC4C,OAAV,CAAkBC,KAAlB,CAAwBG,WAA5C,CAJA,CAMA;;AACAhD,MAAAA,SAAS,CAAC4C,OAAV,CAAkBC,KAAlB,CAAwBI,KAAxB,GAAgCF,UAAhC;AACA/C,MAAAA,SAAS,CAAC4C,OAAV,CAAkBC,KAAlB,CAAwBK,MAAxB,GAAiCF,WAAjC,CARA,CAUA;;AACA/C,MAAAA,SAAS,CAAC2C,OAAV,CAAkBK,KAAlB,GAA0BF,UAA1B;AACA9C,MAAAA,SAAS,CAAC2C,OAAV,CAAkBM,MAAlB,GAA2BF,WAA3B,CAZA,CAcA;;AACA,YAAMG,IAAI,GAAG,MAAMlB,GAAG,CAACmB,aAAJ,CAAkBP,KAAlB,CAAnB,CAfA,CAgBA;;AAEA,UAAIM,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnB,cAAMC,EAAE,GAAG,IAAI3D,EAAE,CAAC4D,gBAAP,CAAwB,CAEjC3D,SAAS,CAAC4D,KAFuB,EAGjC5D,SAAS,CAAC6D,KAHuB,EAGjB7D,SAAS,CAAC8D,KAHO,EAGA9D,SAAS,CAAC+D,KAHV,EAGiB/D,SAAS,CAACgE,KAH3B,EAGkChE,SAAS,CAACiE,KAH5C,EAGmDjE,SAAS,CAACkE,KAH7D,EAIjClE,SAAS,CAACmE,KAJuB,EAIhBnE,SAAS,CAACoE,KAJM,EAICpE,SAAS,CAACqE,KAJX,EAIkBrE,SAAS,CAACsE,KAJ5B,EAImCtE,SAAS,CAACuE,KAJ7C,EAIoDvE,SAAS,CAACwE,KAJ9D,EAIqExE,SAAS,CAACyE,KAJ/E,EAKjCzE,SAAS,CAAC0E,KALuB,EAKhB1E,SAAS,CAAC2E,KALM,EAKC3E,SAAS,CAAC4E,KALX,EAKkB5E,SAAS,CAAC6E,KAL5B,EAKmC7E,SAAS,CAAC8E,KAL7C,EAKoD9E,SAAS,CAAC+E,KAL9D,EAKqE/E,SAAS,CAACgF,KAL/E,EAMjChF,SAAS,CAACiF,KANuB,EAMhBjF,SAAS,CAACkF,KANM,EAMClF,SAAS,CAACmF,KANX,EAMkBnF,SAAS,CAACoF,KAN5B,EAMmCpF,SAAS,CAACqF,KAN7C,CAAxB,CAAX;AAQA,cAAMC,OAAO,GAAG,MAAM5B,EAAE,CAAC6B,QAAH,CAAYhC,IAAI,CAAC,CAAD,CAAJ,CAAQiC,SAApB,EAA+B,CAA/B,CAAtB;;AACA,YAAIF,OAAO,CAACG,QAAR,KAAqBC,SAArB,IAAkCJ,OAAO,CAACG,QAAR,CAAiBhC,MAAjB,GAA0B,CAAhE,EAAmE;AAGjE,gBAAMkC,UAAU,GAAGL,OAAO,CAACG,QAAR,CAAiBG,GAAjB,CAChBC,UAAD,IAAgBA,UAAU,CAACF,UADV,CAAnB;AAGA,gBAAMG,aAAa,GAAGH,UAAU,CAACI,OAAX,CACpBlD,IAAI,CAACmD,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBN,UAArB,CADoB,CAAtB;AAGCpD,UAAAA,OAAO,CAACC,GAAR,CAAY8C,OAAO,CAACG,QAAR,CAAiBK,aAAjB,EAAgCI,IAA5C;AACD3F,UAAAA,QAAQ,CAAC+E,OAAO,CAACG,QAAR,CAAiBK,aAAjB,EAAgCI,IAAjC,CAAR,CAViE,CAWpE;AACE;AACF;;AACD,YAAMC,GAAG,GAAG9F,SAAS,CAAC2C,OAAV,CAAkBoD,UAAlB,CAA6B,IAA7B,CAAZ;AACAtG,MAAAA,QAAQ,CAACyD,IAAD,EAAO4C,GAAP,CAAR;AACD;AACF,GAnDD;;AAqDAzG,EAAAA,SAAS,CAAC,MAAI;AAAC0C,IAAAA,WAAW;AAAG,GAApB,EAAqB,EAArB,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAElC,QAAQ,CAACyC,UAAT;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,GAAG,EAAEvC,SADP;AAEE,QAAA,KAAK,EAAE;AACLiG,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,WAAW,EAAE,MAHR;AAKLC,UAAAA,KAAK,EAAE,CALF;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,CAPH;AAQLrD,UAAAA,KAAK,EAAE,GARF;AASLC,UAAAA,MAAM,EAAE;AATH;AAFT;AAAA;AAAA;AAAA;AAAA,cAFF,eAiBE;AACE,QAAA,GAAG,EAAEjD,SADP;AAEE,QAAA,KAAK,EAAE;AACLgG,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,WAAW,EAAE,MAHR;AAKLC,UAAAA,KAAK,EAAE,CALF;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,CAPH;AAQLrD,UAAAA,KAAK,EAAE,GARF;AASLC,UAAAA,MAAM,EAAE;AATH;AAFT;AAAA;AAAA;AAAA;AAAA,cAjBF,EAgCGhD,KAAK,KAAK,IAAV,gBACC;AACE,QAAA,GAAG,EAAEG,MAAM,CAACH,KAAD,CADb;AAEE,QAAA,KAAK,EAAE;AACL+F,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,WAAW,EAAE,MAHR;AAKLI,UAAAA,MAAM,EAAE,GALH;AAMLH,UAAAA,KAAK,EAAE,CANF;AAOLC,UAAAA,SAAS,EAAE,QAPN;AAQLnD,UAAAA,MAAM,EAAE;AARH;AAFT;AAAA;AAAA;AAAA;AAAA,cADD,GAeC,EA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD;;GAhKQnD,G;;KAAAA,G;AAkKT,eAAeA,GAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawHand } from \"../utilities\";\r\n\r\nimport * as fp from \"fingerpose\";\r\nimport Handsigns from './handsigns'\r\nimport {Signimage,Signpass} from './handimage'\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [emoji, setEmoji] = useState(null);\r\n  let letters=['A','B','C']\r\n  const images = { A: Signimage.A, \r\n    B: Signimage.B, \r\n    C: Signimage.C,\r\n    D: Signimage.D,\r\n    E:Signimage.E,\r\n    F:Signimage.F,\r\n    G:Signimage.G,\r\n    H:Signimage.H,\r\n    I:Signimage.I,\r\n    J:Signimage.J,\r\n    K:Signimage.K,\r\n    L:Signimage.L,\r\n    M: Signimage.M, \r\n    N: Signimage.N,\r\n    O: Signimage.O,\r\n    P:Signimage.P,\r\n    Q:Signimage.Q,\r\n    R:Signimage.R,\r\n    S:Signimage.S,\r\n    T:Signimage.T,\r\n    U:Signimage.U,\r\n    V:Signimage.V,\r\n    W:Signimage.W,\r\n    X:Signimage.X,\r\n    Y:Signimage.Y,\r\n    Z:Signimage.Z,\r\n  };\r\n  \r\n \r\n  const runHandpose = async () => {\r\n    const net = await handpose.load();\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n  const pickRandom= ()=>{\r\n    let random= Math.floor(Math.random()*26);\r\n    let letter= ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\r\n    return letter[random];\r\n  }\r\n  pickRandom();\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      // console.log(hand);\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n         \r\n          Handsigns.aSign,\r\n          Handsigns.bSign,Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign,\r\n          Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign,\r\n          Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign,\r\n          Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n        \r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n           console.log(gesture.gestures[maxConfidence].name);\r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n       //   console.log(emoji);\r\n        }\r\n      }\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={Signpass.pickRandom()}/>\r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n         \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n         \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        {/* NEW STUFF */}\r\n        {emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n           \r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {/* NEW STUFF */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}