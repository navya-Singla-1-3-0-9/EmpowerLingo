{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\components\\\\webcam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport { useParams } from \"react-router-dom\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"../utilities\";\nimport * as fp from \"fingerpose\";\nimport Handsigns from '../pages/handsigns';\nimport { Signimage, Signpass } from '../pages/handimage';\nimport { render } from 'react-dom';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cam = props => {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [emoji, setEmoji] = useState(null);\n  const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  console.log(\"props\", props.letter);\n  const images = {\n    A: Signimage.A,\n    B: Signimage.B,\n    C: Signimage.C,\n    D: Signimage.D,\n    E: Signimage.E,\n    F: Signimage.F,\n    G: Signimage.G,\n    H: Signimage.H,\n    I: Signimage.I,\n    J: Signimage.J,\n    K: Signimage.K,\n    L: Signimage.L,\n    M: Signimage.M,\n    N: Signimage.N,\n    O: Signimage.O,\n    P: Signimage.P,\n    Q: Signimage.Q,\n    R: Signimage.R,\n    S: Signimage.S,\n    T: Signimage.T,\n    U: Signimage.U,\n    V: Signimage.V,\n    W: Signimage.W,\n    X: Signimage.X,\n    Y: Signimage.Y,\n    Z: Signimage.Z\n  };\n  const signs = {\n    A: Signpass.A,\n    B: Signpass.B\n  };\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const options = {\n    // you can also just use 'bottom center'\n    position: positions.BOTTOM_CENTER,\n    timeout: 5000,\n    offset: '30px',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const hand = await net.estimateHands(video); // console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([Handsigns.aSign, Handsigns.bSign, Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign, Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign, Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign, Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          const confidence = gesture.gestures.map(prediction => prediction.confidence);\n          const maxConfidence = confidence.indexOf(Math.max.apply(null, confidence)); //console.log(gesture.gestures[maxConfidence].name);  \n          //console.log(Signpass[current].alt && Signpass[current]);\n\n          if (props.letter != null) {\n            if (Signpass[props.letter].alt === gesture.gestures[maxConfidence].name) {\n              const data = {\n                mastered: letters[props.letter]\n              };\n              console.log(JSON.stringify(data));\n              fetch('http://localhost:3001/mastered', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(data),\n                credentials: 'include'\n              }).then(response => response.json()).then(json => console.log(json)).catch(error => console.log('Authorization failed : ' + error.message));\n\n              /*#__PURE__*/\n              _jsxDEV(AlertProvider, {\n                template: AlertTemplate,\n                ...options,\n                children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 16\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 16\n              }, this);\n              /*  swal(\r\n                <div>\r\n                  <h1>Hello world!</h1>\r\n                  <p>\r\n                    This is now rendered with JSX!\r\n                  </p>\r\n                </div>\r\n              );*/\n\n            }\n          }\n\n          setEmoji(gesture.gestures[maxConfidence].name); //   console.log(emoji);\n        }\n      }\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runHandpose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 600,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), emoji !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[emoji],\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          bottom: 500,\n          right: 0,\n          textAlign: \"center\",\n          height: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cam, \"cK2KWSG+h4TrDH7vFOsftQI8T8o=\");\n\n_c = Cam;\nexport default Cam;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cam\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/components/webcam.js"],"names":["React","useRef","useState","useEffect","swal","useParams","handpose","Webcam","drawHand","fp","Handsigns","Signimage","Signpass","render","transitions","positions","Provider","AlertProvider","AlertTemplate","Cam","props","webcamRef","canvasRef","emoji","setEmoji","letters","console","log","letter","images","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","signs","runHandpose","net","load","setInterval","detect","options","position","BOTTOM_CENTER","timeout","offset","transition","SCALE","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","length","GE","GestureEstimator","aSign","bSign","cSign","dSign","eSign","fSign","gSign","hSign","iSign","jSign","kSign","lSign","mSign","nSign","oSign","pSign","qSign","rSign","sSign","tSign","uSign","vSign","wSign","xSign","ySign","zSign","gesture","estimate","landmarks","gestures","undefined","confidence","map","prediction","maxConfidence","indexOf","Math","max","apply","alt","name","data","mastered","JSON","stringify","fetch","method","headers","body","credentials","then","response","json","catch","error","message","ctx","getContext","marginLeft","marginRight","right","textAlign","zindex","bottom"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport { drawHand } from \"../utilities\";\r\nimport * as fp from \"fingerpose\";\r\nimport Handsigns from '../pages/handsigns'\r\nimport {Signimage,Signpass} from '../pages/handimage'\r\nimport { render } from 'react-dom'\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\nconst Cam=(props)=>{\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [emoji, setEmoji] = useState(null);\r\n  \r\n  const letters= ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\r\n  \r\n  console.log(\"props\",props.letter)\r\n  const images = { A: Signimage.A, \r\n    B: Signimage.B, \r\n    C: Signimage.C,\r\n    D: Signimage.D,\r\n    E:Signimage.E,\r\n    F:Signimage.F,\r\n    G:Signimage.G,\r\n    H:Signimage.H,\r\n    I:Signimage.I,\r\n    J:Signimage.J,\r\n    K:Signimage.K,\r\n    L:Signimage.L,\r\n    M: Signimage.M, \r\n    N: Signimage.N,\r\n    O: Signimage.O,\r\n    P:Signimage.P,\r\n    Q:Signimage.Q,\r\n    R:Signimage.R,\r\n    S:Signimage.S,\r\n    T:Signimage.T,\r\n    U:Signimage.U,\r\n    V:Signimage.V,\r\n    W:Signimage.W,\r\n    X:Signimage.X,\r\n    Y:Signimage.Y,\r\n    Z:Signimage.Z,\r\n  };\r\n  const signs={\r\n    A: Signpass.A,\r\n    B: Signpass.B,\r\n  }\r\n \r\n  \r\n \r\n  const runHandpose = async () => {\r\n  \r\n    const net = await handpose.load();\r\n    \r\n \r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n\r\n  const options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.BOTTOM_CENTER,\r\n    timeout: 5000,\r\n    offset: '30px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.SCALE\r\n  }\r\n\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      // console.log(hand);\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n         \r\n          Handsigns.aSign,\r\n          Handsigns.bSign,Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign,\r\n          Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign,\r\n          Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign,\r\n          Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n        \r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n           //console.log(gesture.gestures[maxConfidence].name);  \r\n           //console.log(Signpass[current].alt && Signpass[current]);\r\n           if(props.letter!=null){\r\n          \r\n           if (Signpass[props.letter].alt === gesture.gestures[maxConfidence].name) {\r\n            const data= {mastered:letters[props.letter]}\r\n            console.log(JSON.stringify(data))\r\n               fetch('http://localhost:3001/mastered', { \r\n               method:'POST',\r\n               \r\n               headers:{'Accept': 'application/json',\"Content-Type\":\"application/json\"},\r\n               body:JSON.stringify(data),\r\n               credentials: 'include'\r\n               })   .then(response => response.json())\r\n               .then(json => console.log(json))\r\n               .catch(error => console.log('Authorization failed : ' + error.message));\r\n               <AlertProvider template={AlertTemplate} {...options}>\r\n               <App />\r\n             </AlertProvider>\r\n            /*  swal(\r\n              <div>\r\n                <h1>Hello world!</h1>\r\n                <p>\r\n                  This is now rendered with JSX!\r\n                </p>\r\n              </div>\r\n            );*/\r\n              \r\n           }\r\n           \r\n           \r\n          }\r\n            \r\n          \r\n         \r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n       //   console.log(emoji);\r\n        }\r\n      }\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n     \r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n         \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 600,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n      \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n           \r\n          }}\r\n        />\r\n        {/* NEW STUFF */}\r\n        {emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n           \r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n         \r\n\r\n       \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cam;"]},"metadata":{},"sourceType":"module"}