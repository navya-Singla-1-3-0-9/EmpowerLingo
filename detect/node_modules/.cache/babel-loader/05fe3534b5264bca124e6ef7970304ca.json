{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\pages\\\\transcript.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transcript = () => {\n  _s();\n\n  const {\n    trans_id\n  } = useParams();\n  const [ttext, setText] = useState(null); // let text=\"\";\n\n  const importAll = r => {\n    let images = {};\n    r.keys().map((item, index) => {\n      images[item.replace('./', '')] = r(item);\n    });\n    return images;\n  };\n\n  const images = importAll(require.context('../components/images/keys', false, /\\.(png|jpe?g|svg)$/));\n  React.useEffect(() => {\n    fetch(`/transcript/${trans_id}`).then(res => res.json()).then(data => {\n      //console.log(text);\n      setText(data.transcript);\n    });\n  }, []);\n  console.log(ttext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !ttext ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: ttext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), ttext.toUpperCase().split(\"\").forEach(ch => {\n        {\n          console.log(ch);\n        }\n        return ch != ' ' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[`${ch}.jpg`].default\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 37\n        }, this) : \" \";\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Transcript, \"lhMe0upvYomlwLNvqGlGYnKM3xY=\", false, function () {\n  return [useParams];\n});\n\n_c = Transcript;\nexport default Transcript;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/pages/transcript.js"],"names":["React","useState","useParams","Transcript","trans_id","ttext","setText","importAll","r","images","keys","map","item","index","replace","require","context","useEffect","fetch","then","res","json","data","transcript","console","log","toUpperCase","split","forEach","ch","default"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;AAEA,MAAMC,UAAU,GAAC,MAAI;AAAA;;AACjB,QAAM;AAACC,IAAAA;AAAD,MAAYF,SAAS,EAA3B;AACA,QAAM,CAACG,KAAD,EAAOC,OAAP,IAAiBL,QAAQ,CAAC,IAAD,CAA/B,CAFiB,CAGlB;;AACA,QAAMM,SAAS,GAAEC,CAAD,IAAM;AACrB,QAAIC,MAAM,GAAG,EAAb;AACAD,IAAAA,CAAC,CAACE,IAAF,GAASC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAEJ,MAAAA,MAAM,CAACG,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCN,CAAC,CAACI,IAAD,CAAlC;AAA2C,KAA3E;AACA,WAAOH,MAAP;AACD,GAJA;;AAMD,QAAMA,MAAM,GAAGF,SAAS,CAACQ,OAAO,CAACC,OAAR,CAAgB,2BAAhB,EAA6C,KAA7C,EAAoD,oBAApD,CAAD,CAAxB;AACFhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAE,eAAcd,QAAS,EAAzB,CAAL,CACGe,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACZ;AACAhB,MAAAA,OAAO,CAACgB,IAAI,CAACC,UAAN,CAAP;AACH,KALH;AAMD,GAPH,EAOK,EAPL;AAQEC,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AAEA,sBACI;AAAA,cAEO,CAACA,KAAD,gBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,gBACA;AAAA,8BACG;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADH,EAEIA,KAAK,CAACqB,WAAN,GAAoBC,KAApB,CAA0B,EAA1B,EAA8BC,OAA9B,CAAsCC,EAAE,IAAE;AAEzC;AAACL,UAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;AAAgB;AACf,eAAQA,EAAE,IAAE,GAAJ,gBAAQ;AAAK,UAAA,GAAG,EAAEpB,MAAM,CAAE,GAAEoB,EAAG,MAAP,CAAN,CAAoBC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAAR,GAAiD,GAAzD;AAIH,OAPA,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBD,CAzCD;;GAAM3B,U;UACgBD,S;;;KADhBC,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Transcript=()=>{\r\n    const {trans_id}= useParams();\r\n    const [ttext,setText]= useState(null);\r\n   // let text=\"\";\r\n   const importAll=(r)=> {\r\n    let images = {};\r\n    r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\r\n    return images;\r\n  }\r\n  \r\n  const images = importAll(require.context('../components/images/keys', false, /\\.(png|jpe?g|svg)$/));\r\nReact.useEffect(() => {\r\n    fetch(`/transcript/${trans_id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n          //console.log(text);\r\n          setText(data.transcript);\r\n      });\r\n  }, []);\r\n  console.log(ttext);\r\n\r\n  return (\r\n      <div>\r\n            {\r\n            (!ttext?<p>LOADING...</p>:\r\n           ( <div>\r\n                <p>{ttext}</p>\r\n                {ttext.toUpperCase().split(\"\").forEach(ch=>{\r\n                 \r\n                  {console.log(ch)}\r\n                    return (ch!=' '?<img src={images[`${ch}.jpg`].default}/>:\" \")\r\n                    \r\n                  \r\n                   \r\n                })\r\n                }\r\n                </div>\r\n           )\r\n                )}\r\n      </div>\r\n  )\r\n}\r\nexport default Transcript"]},"metadata":{},"sourceType":"module"}