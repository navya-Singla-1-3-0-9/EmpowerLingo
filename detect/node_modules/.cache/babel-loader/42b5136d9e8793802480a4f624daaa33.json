{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl__\\\\ASL\\\\detect\\\\src\\\\pages\\\\commonsigns.js\";\nimport React, { Component } from \"react\";\nimport '../components/css/signs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass signApp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      signs: [{\n        url: \"https://media3.giphy.com/media/sitxzpEkJfKPzTEsFS/giphy360p.mp4?cid=ecf05e47f8hrc9jno29pm4b3cucfu5d6jh5n8xnmht4qmbdr&rid=giphy360p.mp4&ct=v\",\n        instructions: \"This is a two part sign. First sign good by touching one flat hand to your chin and bringing it down to meet your other hand, which is at about waist height and palm up.Next sign “morning” by bending the elbow of one arm, leaving the arm parallel to your body, and resting the finger tips in the crook of the elbow of your second arm. With the second hand, bring the flat and palm up hand from under the first arm up and towards you – like the sun coming up over the horizon.Put together, this is a Good – Morning!\"\n      }, {}, {}, {}, {}],\n      currentPage: 1,\n      signsPerPage: 2\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n\n  render() {\n    const {\n      signs,\n      currentPage,\n      signsPerPage\n    } = this.state; // Logic for displaying current signs\n\n    const indexOfLastsign = currentPage * signsPerPage;\n    const indexOfFirstsign = indexOfLastsign - signsPerPage;\n    const currentsigns = signs.slice(indexOfFirstsign, indexOfLastsign);\n    const rendersigns = currentsigns.map((sign, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: \"width:480px\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            frameBorder: \"0\",\n            height: \"270\",\n            src: sign.url,\n            width: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: sign.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(signs.length / signsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: this.handleClick,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          color: \"black\"\n        },\n        children: rendersigns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"page-numbers\",\n        children: renderPageNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default signApp;","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl__/ASL/detect/src/pages/commonsigns.js"],"names":["React","Component","signApp","constructor","state","signs","url","instructions","currentPage","signsPerPage","handleClick","bind","event","setState","Number","target","id","render","indexOfLastsign","indexOfFirstsign","currentsigns","slice","rendersigns","map","sign","index","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6BAAP;;;AACA,MAAMC,OAAN,SAAsBF,KAAK,CAACC,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,GAAG,EAAC,6IADA;AAEJC,QAAAA,YAAY,EAAE;AAFV,OAAD,EAKP,EALO,EAQP,EARO,EAWP,EAXO,EAcP,EAdO,CADI;AAkBXC,MAAAA,WAAW,EAAE,CAlBF;AAmBXC,MAAAA,YAAY,EAAE;AAnBH,KAAb;AAqBA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AACZL,MAAAA,WAAW,EAAEM,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,EAAd;AADP,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,KAAF;AAASG,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAuC,KAAKL,KAAlD,CADO,CAGP;;AACA,UAAMc,eAAe,GAAGV,WAAW,GAAGC,YAAtC;AACA,UAAMU,gBAAgB,GAAGD,eAAe,GAAGT,YAA3C;AACA,UAAMW,YAAY,GAAGf,KAAK,CAACgB,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;AAEA,UAAMI,WAAW,GAAGF,YAAY,CAACG,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpD,0BAAQ;AAAA,gCACN;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA,iCAAyB;AAAS,YAAA,WAAW,EAAC,GAArB;AAAyB,YAAA,MAAM,EAAC,KAAhC;AAAsC,YAAA,GAAG,EAAED,IAAI,CAAClB,GAAhD;AAAqD,YAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADM,eAER;AAAA,oBAAIkB,IAAI,CAACjB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFQ;AAAA,SAAUkB,KAAV;AAAA;AAAA;AAAA;AAAA,cAAR;AAGD,KAJmB,CAApB,CARO,CAcP;;AACA,UAAMC,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUxB,KAAK,CAACyB,MAAN,GAAerB,YAAzB,CAArB,EAA6DkB,CAAC,EAA9D,EAAkE;AAChED,MAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACD;;AAED,UAAMK,iBAAiB,GAAGN,WAAW,CAACH,GAAZ,CAAgBU,MAAM,IAAI;AAClD,0BACE;AAEE,QAAA,EAAE,EAAEA,MAFN;AAGE,QAAA,OAAO,EAAE,KAAKvB,WAHhB;AAAA,kBAKGuB;AALH,SACOA,MADP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVyB,CAA1B;AAYA,wBACE;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA,kBACGZ;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,EAAE,EAAC,cAAP;AAAA,kBACGU;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA3EiC;;AA+EpC,eAAe9B,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../components/css/signs.css'\r\nclass signApp extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        signs: [{\r\n            url:\"https://media3.giphy.com/media/sitxzpEkJfKPzTEsFS/giphy360p.mp4?cid=ecf05e47f8hrc9jno29pm4b3cucfu5d6jh5n8xnmht4qmbdr&rid=giphy360p.mp4&ct=v\",\r\n            instructions: \"This is a two part sign. First sign good by touching one flat hand to your chin and bringing it down to meet your other hand, which is at about waist height and palm up.Next sign “morning” by bending the elbow of one arm, leaving the arm parallel to your body, and resting the finger tips in the crook of the elbow of your second arm. With the second hand, bring the flat and palm up hand from under the first arm up and towards you – like the sun coming up over the horizon.Put together, this is a Good – Morning!\"\r\n        \r\n          },\r\n        {\r\n\r\n        },\r\n        {\r\n\r\n        },\r\n        {\r\n\r\n        },\r\n        {\r\n\r\n        }],\r\n        currentPage: 1,\r\n        signsPerPage: 2\r\n      };\r\n      this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n      this.setState({\r\n        currentPage: Number(event.target.id)\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { signs, currentPage, signsPerPage } = this.state;\r\n\r\n      // Logic for displaying current signs\r\n      const indexOfLastsign = currentPage * signsPerPage;\r\n      const indexOfFirstsign = indexOfLastsign - signsPerPage;\r\n      const currentsigns = signs.slice(indexOfFirstsign, indexOfLastsign);\r\n\r\n      const rendersigns = currentsigns.map((sign, index) => {\r\n        return (<div key={index}>\r\n          <div style=\"width:480px\"><iframe  frameBorder=\"0\" height=\"270\" src={sign.url} width=\"480\"></iframe></div>\r\n        <p>{sign.instructions}</p></div>);\r\n      });\r\n\r\n      // Logic for displaying page numbers\r\n      const pageNumbers = [];\r\n      for (let i = 1; i <= Math.ceil(signs.length / signsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n\r\n      const renderPageNumbers = pageNumbers.map(number => {\r\n        return (\r\n          <li\r\n            key={number}\r\n            id={number}\r\n            onClick={this.handleClick}\r\n          >\r\n            {number}\r\n          </li>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div>\r\n          <ul style={{color:\"black\"}}>\r\n            {rendersigns}\r\n          </ul>\r\n          <ul id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  export default signApp"]},"metadata":{},"sourceType":"module"}