{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\ASL\\\\detect\\\\src\\\\components\\\\progressBar.js\";\nimport React from \"react\";\nimport './css/progress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CircularProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const sqSize = this.props.sqSize;\n    const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - dashArray * this.props.percentage / 100;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: this.props.sqSize,\n      height: this.props.sqSize,\n      viewBox: viewBox,\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"circle-background\",\n        cx: this.props.sqSize / 2,\n        cy: this.props.sqSize / 2,\n        r: radius,\n        strokeWidth: `${this.props.strokeWidth}px`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"circle-progress\",\n        cx: this.props.sqSize / 2,\n        cy: this.props.sqSize / 2,\n        r: radius,\n        strokeWidth: `${this.props.strokeWidth}px` // Start progress marker at 12 O'Clock\n        ,\n        transform: `rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`,\n        style: {\n          strokeDasharray: dashArray,\n          strokeDashoffset: dashOffset\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"circle-text\",\n        x: \"50%\",\n        y: \"50%\",\n        dy: \".3em\",\n        textAnchor: \"middle\",\n        children: `${this.props.percentage}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nCircularProgressBar.defaultProps = {\n  sqSize: 180,\n  percentage: 55,\n  strokeWidth: 12\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentage: 55\n    };\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n  }\n\n  handleChangeEvent(event) {\n    this.setState({\n      percentage: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CircularProgressBar, {\n        strokeWidth: \"10\",\n        sqSize: \"200\",\n        percentage: this.state.percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"progressInput\",\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          step: \"1\",\n          value: this.state.percentage,\n          onChange: this.handleChangeEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CircularProgressBar;","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/ASL/detect/src/components/progressBar.js"],"names":["React","CircularProgressBar","Component","constructor","props","state","render","sqSize","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","percentage","strokeDasharray","strokeDashoffset","defaultProps","App","handleChangeEvent","bind","event","setState","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './css/progress.css';\r\nclass CircularProgressBar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n  \r\n    render() {\r\n      const sqSize = this.props.sqSize;\r\n      const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\r\n      const viewBox = `0 0 ${sqSize} ${sqSize}`;\r\n      const dashArray = radius * Math.PI * 2;\r\n      const dashOffset = dashArray - dashArray * this.props.percentage / 100;\r\n  \r\n      return (\r\n        <svg\r\n            width={this.props.sqSize}\r\n            height={this.props.sqSize}\r\n            viewBox={viewBox}>\r\n            <circle\r\n              className=\"circle-background\"\r\n              cx={this.props.sqSize / 2}\r\n              cy={this.props.sqSize / 2}\r\n              r={radius}\r\n              strokeWidth={`${this.props.strokeWidth}px`} />\r\n            <circle\r\n              className=\"circle-progress\"\r\n              cx={this.props.sqSize / 2}\r\n              cy={this.props.sqSize / 2}\r\n              r={radius}\r\n              strokeWidth={`${this.props.strokeWidth}px`}\r\n              // Start progress marker at 12 O'Clock\r\n              transform={`rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`}\r\n              style={{\r\n                strokeDasharray: dashArray,\r\n                strokeDashoffset: dashOffset\r\n              }} />\r\n            <text\r\n              className=\"circle-text\"\r\n              x=\"50%\"\r\n              y=\"50%\"\r\n              dy=\".3em\"\r\n              textAnchor=\"middle\">\r\n              {`${this.props.percentage}%`}\r\n            </text>\r\n        </svg>\r\n      );\r\n    }\r\n  }\r\n  \r\n  CircularProgressBar.defaultProps = {\r\n    sqSize: 180,\r\n    percentage: 55,\r\n    strokeWidth: 12\r\n  };\r\n  \r\n  class App extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        percentage: 55\r\n      };\r\n  \r\n      this.handleChangeEvent = this.handleChangeEvent.bind(this);\r\n    }\r\n  \r\n    handleChangeEvent(event) {\r\n      this.setState({\r\n        percentage: event.target.value\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n            <CircularProgressBar\r\n              strokeWidth=\"10\"\r\n              sqSize=\"200\"\r\n              percentage={this.state.percentage}/>\r\n            <div>\r\n              <input \r\n                id=\"progressInput\" \r\n                type=\"range\" \r\n                min=\"0\" \r\n                max=\"100\" \r\n                step=\"1\"\r\n                value={this.state.percentage}\r\n                onChange={this.handleChangeEvent}/>\r\n            </div>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default CircularProgressBar;"]},"metadata":{},"sourceType":"module"}