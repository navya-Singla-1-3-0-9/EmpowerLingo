{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\asl\\\\detect\\\\src\\\\pages\\\\practice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"../utilities\";\nimport * as fp from \"fingerpose\";\nimport Handsigns from './handsigns';\nimport { Signimage, Signpass } from './handimage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [emoji, setEmoji] = useState(null);\n  let letters = ['A', 'B', 'C'];\n  const images = {\n    A: Signimage.A,\n    B: Signimage.B,\n    C: Signimage.C,\n    D: Signimage.D,\n    E: Signimage.E,\n    F: Signimage.F,\n    G: Signimage.G,\n    H: Signimage.H,\n    I: Signimage.I,\n    J: Signimage.J,\n    K: Signimage.K,\n    L: Signimage.L,\n    M: Signimage.M,\n    N: Signimage.N,\n    O: Signimage.O,\n    P: Signimage.P,\n    Q: Signimage.Q,\n    R: Signimage.R,\n    S: Signimage.S,\n    T: Signimage.T,\n    U: Signimage.U,\n    V: Signimage.V,\n    W: Signimage.W,\n    X: Signimage.X,\n    Y: Signimage.Y,\n    Z: Signimage.Z\n  };\n  const signs = {\n    A: Signpass.A,\n    B: Signpass.B\n  };\n  let signList = [];\n  let currentSign = 0;\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n\n    _signList();\n\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  }\n\n  function generateSigns() {\n    const password = shuffle(Signpass);\n    return password;\n  }\n\n  function _signList() {\n    signList = generateSigns();\n  }\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const hand = await net.estimateHands(video); // console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([Handsigns.aSign, Handsigns.bSign, Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign, Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign, Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign, Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          const confidence = gesture.gestures.map(prediction => prediction.confidence);\n          const maxConfidence = confidence.indexOf(Math.max.apply(null, confidence)); //console.log(gesture.gestures[maxConfidence].name);\n\n          console.log(currentSign);\n\n          if (signList[currentSign].alt === gesture.gestures[maxConfidence].name) {\n            currentSign++;\n\n            if (currentSign === signList.length) {\n              _signList();\n\n              currentSign = 0;\n            }\n          }\n\n          setEmoji(gesture.gestures[maxConfidence].name); //   console.log(emoji);\n        }\n      }\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runHandpose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 600,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), emoji !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[emoji],\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          bottom: 500,\n          right: 0,\n          textAlign: \"center\",\n          height: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: signList[currentSign],\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          width: 500,\n          left: 0,\n          textAlign: \"center\",\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cK2KWSG+h4TrDH7vFOsftQI8T8o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/asl/detect/src/pages/practice.js"],"names":["React","useRef","useState","useEffect","tf","handpose","Webcam","drawHand","fp","Handsigns","Signimage","Signpass","App","webcamRef","canvasRef","emoji","setEmoji","letters","images","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","signs","signList","currentSign","runHandpose","net","load","_signList","console","log","setInterval","detect","shuffle","a","i","length","j","Math","floor","random","generateSigns","password","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","GE","GestureEstimator","aSign","bSign","cSign","dSign","eSign","fSign","gSign","hSign","iSign","jSign","kSign","lSign","mSign","nSign","oSign","pSign","qSign","rSign","sSign","tSign","uSign","vSign","wSign","xSign","ySign","zSign","gesture","estimate","landmarks","gestures","undefined","confidence","map","prediction","maxConfidence","indexOf","max","apply","alt","name","ctx","getContext","position","marginLeft","marginRight","right","textAlign","zindex","bottom","left"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawHand } from \"../utilities\";\r\n\r\nimport * as fp from \"fingerpose\";\r\nimport Handsigns from './handsigns'\r\nimport {Signimage,Signpass} from './handimage'\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [emoji, setEmoji] = useState(null);\r\n  let letters=['A','B','C']\r\n  const images = { A: Signimage.A, \r\n    B: Signimage.B, \r\n    C: Signimage.C,\r\n    D: Signimage.D,\r\n    E:Signimage.E,\r\n    F:Signimage.F,\r\n    G:Signimage.G,\r\n    H:Signimage.H,\r\n    I:Signimage.I,\r\n    J:Signimage.J,\r\n    K:Signimage.K,\r\n    L:Signimage.L,\r\n    M: Signimage.M, \r\n    N: Signimage.N,\r\n    O: Signimage.O,\r\n    P:Signimage.P,\r\n    Q:Signimage.Q,\r\n    R:Signimage.R,\r\n    S:Signimage.S,\r\n    T:Signimage.T,\r\n    U:Signimage.U,\r\n    V:Signimage.V,\r\n    W:Signimage.W,\r\n    X:Signimage.X,\r\n    Y:Signimage.Y,\r\n    Z:Signimage.Z,\r\n  };\r\n  const signs={\r\n    A: Signpass.A,\r\n    B: Signpass.B,\r\n  }\r\n  let signList = [];\r\n  let currentSign=0;\r\n \r\n  const runHandpose = async () => {\r\n    const net = await handpose.load();\r\n    _signList();\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n  function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction generateSigns(){\r\n    const password = shuffle(Signpass);\r\n    return password;\r\n}\r\nfunction _signList(){\r\nsignList = generateSigns();\r\n}\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      // console.log(hand);\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n         \r\n          Handsigns.aSign,\r\n          Handsigns.bSign,Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign,\r\n          Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign,\r\n          Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign,\r\n          Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n        \r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n           //console.log(gesture.gestures[maxConfidence].name);\r\n           console.log(currentSign);\r\n           if (signList[currentSign].alt === gesture.gestures[maxConfidence].name) {\r\n              currentSign++;\r\n              if (currentSign === signList.length) {\r\n                _signList();\r\n                currentSign = 0;\r\n            }\r\n          }\r\n       \r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n       //   console.log(emoji);\r\n        }\r\n      }\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n     \r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n         \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 600,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n      \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n           \r\n          }}\r\n        />\r\n        {/* NEW STUFF */}\r\n        {emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n           \r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n         <img\r\n            src={signList[currentSign]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              width:500,\r\n              \r\n              left: 0,\r\n              textAlign: \"center\",\r\n              height: 480,\r\n            }}\r\n          />\r\n\r\n        {/* NEW STUFF */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}