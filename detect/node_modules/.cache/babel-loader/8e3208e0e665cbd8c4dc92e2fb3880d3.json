{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singl\\\\OneDrive\\\\Desktop\\\\NodeIntro\\\\ASL\\\\detect\\\\src\\\\pages\\\\talk.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"../utilities\";\nimport * as fp from \"fingerpose\";\nimport Handsigns from '../pages/handsigns';\nimport { Signimage, Signpass } from '../pages/handimage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Talk = () => {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [emoji, setEmoji] = useState(null);\n  const [inputval, setInput] = useState([]);\n  const images = {\n    A: Signimage.A,\n    B: Signimage.B,\n    C: Signimage.C,\n    D: Signimage.D,\n    E: Signimage.E,\n    F: Signimage.F,\n    G: Signimage.G,\n    H: Signimage.H,\n    I: Signimage.I,\n    J: Signimage.J,\n    K: Signimage.K,\n    L: Signimage.L,\n    M: Signimage.M,\n    N: Signimage.N,\n    O: Signimage.O,\n    P: Signimage.P,\n    Q: Signimage.Q,\n    R: Signimage.R,\n    S: Signimage.S,\n    T: Signimage.T,\n    U: Signimage.U,\n    V: Signimage.V,\n    W: Signimage.W,\n    X: Signimage.X,\n    Y: Signimage.Y,\n    Z: Signimage.Z\n  };\n  const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  const display = () => {\n    console.log(inputval);\n  };\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 1000);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const hand = await net.estimateHands(video); // console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([Handsigns.aSign, Handsigns.bSign, Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign, Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign, Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign, Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          const confidence = gesture.gestures.map(prediction => prediction.confidence);\n          const maxConfidence = confidence.indexOf(Math.max.apply(null, confidence)); //      console.log(gesture.gestures[maxConfidence].name);\n          //console.log(Signpass[current].alt && Signpass[current]);\n\n          setEmoji(gesture.gestures[maxConfidence].name); //setInput(inputval.push(gesture.gestures[maxConfidence].name));\n\n          let newArr = [...inputval];\n          newArr.push(gesture.gestures[maxConfidence].name);\n          setInput(newArr); //console.log(inputval);\n          //   console.log(emoji);\n        }\n      }\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runHandpose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 600,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), emoji !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[emoji],\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          bottom: 500,\n          right: 0,\n          textAlign: \"center\",\n          height: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          zIndex: \"9\"\n        },\n        onClick: display,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          zIndex: \"9\",\n          marginTop: \"600px\",\n          color: \"black\"\n        },\n        value: inputval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Talk, \"jjT4JLmqy7JN9156z8YY54e5urg=\");\n\n_c = Talk;\nexport default Talk;\n\nvar _c;\n\n$RefreshReg$(_c, \"Talk\");","map":{"version":3,"sources":["C:/Users/singl/OneDrive/Desktop/NodeIntro/ASL/detect/src/pages/talk.js"],"names":["React","useRef","useState","useEffect","swal","handpose","Webcam","drawHand","fp","Handsigns","Signimage","Signpass","Talk","webcamRef","canvasRef","emoji","setEmoji","inputval","setInput","images","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","letters","display","console","log","runHandpose","net","load","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","length","GE","GestureEstimator","aSign","bSign","cSign","dSign","eSign","fSign","gSign","hSign","iSign","jSign","kSign","lSign","mSign","nSign","oSign","pSign","qSign","rSign","sSign","tSign","uSign","vSign","wSign","xSign","ySign","zSign","gesture","estimate","landmarks","gestures","undefined","confidence","map","prediction","maxConfidence","indexOf","Math","max","apply","name","newArr","push","ctx","getContext","position","marginLeft","marginRight","right","textAlign","zindex","bottom","zIndex","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport { drawHand } from \"../utilities\";\r\nimport * as fp from \"fingerpose\";\r\nimport Handsigns from '../pages/handsigns'\r\nimport {Signimage,Signpass} from '../pages/handimage'\r\n\r\nconst Talk=()=>{\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [emoji, setEmoji] = useState(null);\r\n  const[inputval, setInput]= useState([]);\r\n\r\n  const images = { A: Signimage.A, \r\n    B: Signimage.B, \r\n    C: Signimage.C,\r\n    D: Signimage.D,\r\n    E:Signimage.E,\r\n    F:Signimage.F,\r\n    G:Signimage.G,\r\n    H:Signimage.H,\r\n    I:Signimage.I,\r\n    J:Signimage.J,\r\n    K:Signimage.K,\r\n    L:Signimage.L,\r\n    M: Signimage.M, \r\n    N: Signimage.N,\r\n    O: Signimage.O,\r\n    P:Signimage.P,\r\n    Q:Signimage.Q,\r\n    R:Signimage.R,\r\n    S:Signimage.S,\r\n    T:Signimage.T,\r\n    U:Signimage.U,\r\n    V:Signimage.V,\r\n    W:Signimage.W,\r\n    X:Signimage.X,\r\n    Y:Signimage.Y,\r\n    Z:Signimage.Z,\r\n  };\r\n  \r\n  const letters= ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\r\n  const display=()=>{\r\n      console.log(inputval);\r\n  }\r\n  \r\n  const runHandpose = async () => {\r\n  \r\n    const net = await handpose.load();\r\n    \r\n \r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    },1000);\r\n  };\r\n\r\n\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      // console.log(hand);\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n         \r\n          Handsigns.aSign,\r\n          Handsigns.bSign,Handsigns.cSign, Handsigns.dSign, Handsigns.eSign, Handsigns.fSign, Handsigns.gSign,\r\n          Handsigns.hSign, Handsigns.iSign, Handsigns.jSign, Handsigns.kSign, Handsigns.lSign, Handsigns.mSign, Handsigns.nSign,\r\n          Handsigns.oSign, Handsigns.pSign, Handsigns.qSign, Handsigns.rSign, Handsigns.sSign, Handsigns.tSign, Handsigns.uSign,\r\n          Handsigns.vSign, Handsigns.wSign, Handsigns.xSign, Handsigns.ySign, Handsigns.zSign\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n        \r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n     //      console.log(gesture.gestures[maxConfidence].name);\r\n            \r\n           //console.log(Signpass[current].alt && Signpass[current]);\r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n          //setInput(inputval.push(gesture.gestures[maxConfidence].name));\r\n\r\n         \r\n            let newArr = [...inputval]; \r\n            newArr.push(gesture.gestures[maxConfidence].name)\r\n          \r\n            setInput(newArr); \r\n          \r\n         //console.log(inputval);\r\n     \r\n       //   console.log(emoji);\r\n        }\r\n      }\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n     \r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n         \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 600,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n      \r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n           \r\n          }}\r\n        />\r\n       \r\n        {emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n           \r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      <button style={{zIndex:\"9\"}} onClick={display}>OK</button>\r\n\r\n      <textarea style={{zIndex:\"9\",marginTop:\"600px\", color:\"black\"}} value={inputval }></textarea>\r\n       \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Talk;"]},"metadata":{},"sourceType":"module"}